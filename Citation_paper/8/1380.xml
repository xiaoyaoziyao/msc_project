<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article
  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article" dtd-version="3.0" xml:lang="EN">
<front>
<journal-meta><journal-id journal-id-type="publisher-id">plos</journal-id><journal-id journal-id-type="nlm-ta">PLoS Comput Biol</journal-id><journal-id journal-id-type="pmc">ploscomp</journal-id><!--===== Grouping journal title elements =====--><journal-title-group><journal-title>PLoS Computational Biology</journal-title></journal-title-group><issn pub-type="ppub">1553-734X</issn><issn pub-type="epub">1553-7358</issn><publisher>
<publisher-name>Public Library of Science</publisher-name>
<publisher-loc>San Francisco, USA</publisher-loc></publisher></journal-meta>
<article-meta><article-id pub-id-type="publisher-id">08-PLCB-RA-0324R3</article-id><article-id pub-id-type="doi">10.1371/journal.pcbi.1000230</article-id><article-categories><subj-group subj-group-type="heading"><subject>Research Article</subject></subj-group><subj-group subj-group-type="Discipline"><subject>Computational Biology/Computational Neuroscience</subject><subject>Neuroscience/Theoretical Neuroscience</subject></subj-group></article-categories><title-group><article-title>Optimal Learning Rules for Discrete Synapses</article-title><alt-title alt-title-type="running-head">Optimal Learning Rules for Discrete Synapses</alt-title></title-group><contrib-group>
<contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Barrett</surname><given-names>Adam B.</given-names></name><xref ref-type="aff" rid="aff1"/><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib>
<contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>van Rossum</surname><given-names>M. C. W.</given-names></name><xref ref-type="aff" rid="aff1"/></contrib>
</contrib-group><aff id="aff1">          <addr-line>Institute for Adaptive and Neural Computation, University of Edinburgh, Edinburgh, United Kingdom</addr-line>       </aff><contrib-group>
<contrib contrib-type="editor" xlink:type="simple"><name name-style="western"><surname>Graham</surname><given-names>Lyle J.</given-names></name>
<role>Editor</role>
<xref ref-type="aff" rid="edit1"/></contrib>
</contrib-group><aff id="edit1">UFR Biomédicale de l'Université René Descartes, France</aff><author-notes>
<corresp id="cor1">* E-mail: <email xlink:type="simple">abarrett@inf.ed.ac.uk</email></corresp>
<fn fn-type="con"><p>Wrote the paper: ABB MCWvR. Performed the research, using analytic mathematics, computer programming, and literature review: ABB. Conceived and designed the project: MCWvR. Performed computer simulations: MCWvR.</p></fn>
<fn fn-type="conflict"><p>The authors have declared that no competing interests exist.</p></fn></author-notes><pub-date pub-type="collection"><month>11</month><year>2008</year></pub-date><pub-date pub-type="epub"><day>28</day><month>11</month><year>2008</year></pub-date><volume>4</volume><issue>11</issue><elocation-id>e1000230</elocation-id><history>
<date date-type="received"><day>29</day><month>4</month><year>2008</year></date>
<date date-type="accepted"><day>16</day><month>10</month><year>2008</year></date>
</history><!--===== Grouping copyright info into permissions =====--><permissions><copyright-year>2008</copyright-year><copyright-holder>Barrett, van Rossum</copyright-holder><license><license-p>This is an open-access article distributed under the terms of the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.</license-p></license></permissions><abstract>
<p>There is evidence that biological synapses have a limited number of discrete weight states. Memory storage with such synapses behaves quite differently from synapses with unbounded, continuous weights, as old memories are automatically overwritten by new memories. Consequently, there has been substantial discussion about how this affects learning and storage capacity. In this paper, we calculate the storage capacity of discrete, bounded synapses in terms of Shannon information. We use this to optimize the learning rules and investigate how the maximum information capacity depends on the number of synapses, the number of synaptic states, and the coding sparseness. Below a certain critical number of synapses per neuron (comparable to numbers found in biology), we find that storage is similar to unbounded, continuous synapses. Hence, discrete synapses do not necessarily have lower storage capacity.</p>
</abstract><abstract abstract-type="summary"><title>Author Summary</title>
<p>It is believed that the neural basis of learning and memory is change in the strength of synaptic connections between neurons. Much theoretical work on this topic assumes that the strength, or weight, of a synapse may vary continuously and be unbounded. More recent studies have considered synapses that have a limited number of discrete states. In dynamical models of such synapses, old memories are automatically overwritten by new memories, and it has been previously difficult to optimize performance using standard capacity measures, for stronger learning typically implies faster forgetting. Here, we propose an information theoretic measure of storage capacity of such forgetting systems, and use this to optimize the learning rules. We find that for parameters comparable to those found in biology, capacity of discrete synapses is similar to that of unbounded, continuous synapses, provided the number of synapses per neuron is limited. Our findings are relevant for experiments investigating the precise nature of synaptic changes during learning, and also pave a path for further work on building biologically realistic memory models.</p>
</abstract><funding-group><funding-statement>This work was supported by the HFSP.</funding-statement></funding-group><counts><page-count count="7"/></counts></article-meta>
</front>
<body><sec id="s1">
<title>Introduction</title>
<p>Memory in biological neural systems is believed to be stored in the synaptic weights. Numerous computational models of such memory systems have been constructed in order to study their properties and to explore potential hardware implementations. Storage capacity and optimal learning rules have been studied both for single-layer associative networks <xref ref-type="bibr" rid="pcbi.1000230-Willshaw1">[1]</xref>,<xref ref-type="bibr" rid="pcbi.1000230-Dayan1">[2]</xref>, studied here, and for auto-associative networks <xref ref-type="bibr" rid="pcbi.1000230-Hopfield1">[3]</xref>,<xref ref-type="bibr" rid="pcbi.1000230-Meunier1">[4]</xref>. Commonly, synaptic weights in such models are represented by unbounded, continuous real numbers.</p>
<p>However, in biology, as well as in potential hardware, synaptic weights should take values between certain bounds. Furthermore, synapses might be restricted to have a limited number of synaptic states, e.g. the synapse might be binary. Although binary synapses might have limited storage capacity, they can be made more robust to biochemical noise than continuous synapses <xref ref-type="bibr" rid="pcbi.1000230-Crick1">[5]</xref>. Consistent with this, experiments suggest that synaptic weight changes occur in steps. For example, putative single synapse experiments show that a switch-like increment or reduction to the excitatory post-synaptic current can be induced by pairing brief pre-synaptic stimulation with appropriate post-synaptic depolarization <xref ref-type="bibr" rid="pcbi.1000230-Petersen1">[6]</xref>,<xref ref-type="bibr" rid="pcbi.1000230-OConnor1">[7]</xref>.</p>
<p>Networks with bounded synapses have the palimpsest property, i.e. old memories decay automatically as they are overwritten by new ones <xref ref-type="bibr" rid="pcbi.1000230-Parisi1">[8]</xref>–<xref ref-type="bibr" rid="pcbi.1000230-Leibold1">[15]</xref>. In contrast, in networks with continuous, unbounded synapses, storing additional memories reduces the quality of recent and old memories equally (see section <italic>Comparison to continuous, unbounded synapses</italic>). Forgetting of old memories must in that case be explicitly incorporated, for instance via a weight decay mechanism <xref ref-type="bibr" rid="pcbi.1000230-Nadal1">[16]</xref>,<xref ref-type="bibr" rid="pcbi.1000230-Sterratt1">[17]</xref>. The automatic forgetting of discrete, bounded synapses allows one to study learning in a realistic equilibrium context, in which there can be continual storage of new information.</p>
<p>It is common to use the signal-to-noise ratio (SNR) to quantify memory storage in neural networks <xref ref-type="bibr" rid="pcbi.1000230-Dayan1">[2]</xref>,<xref ref-type="bibr" rid="pcbi.1000230-Fusi2">[18]</xref>. The SNR measures the separation between responses of the network; the higher the SNR, the more the memory stands out and the less likely it will be lost or distorted. When weights are unbounded, each stored pattern has the same SNR. Storage capacity can then be defined as the maximum number of patterns for which the SNR is larger than some fixed, minimum value.</p>
<p>However, for discrete, bounded synapses performance must be characterized by <italic>two</italic> quantities: the initial SNR, and its decay rate. Ideally, a memory has a high SNR and a slow decay, but altering learning rules typically results in either 1) an increase in memory lifetime but a decrease in initial SNR <xref ref-type="bibr" rid="pcbi.1000230-Fusi2">[18]</xref>, or 2) an increase in initial SNR but a decrease in memory lifetime. Optimization of the learning rule is ambivalent because an arbitrary trade-off must be made between these two effects. In this paper we resolve this conflict between learning and forgetting by analyzing the capacity of synapses in terms of Shannon information. We describe a framework for calculating the information capacity of bounded, discrete synapses, and use this to find optimal learning rules.</p>
<p>We model a single neuron, and investigate how information capacity depends on the number of synapses and the number of synaptic states. We find that below a critical number of synapses, the total capacity is linear in the number of synapses, while for more synapses the capacity grows only as the square root of the number of synapses per neuron. This critical number is dependent on the sparseness of the patterns stored, as well as on the number of synaptic states. Furthermore, when increasing the number of synaptic states, the information initially grows linearly with the number of states, but saturates for many states. Interestingly, for biologically realistic parameters, capacity is just at this critical point, suggesting that the number of synapses per neuron is limited to prevent sub-optimal learning. Finally, the capacity measure allows direct comparison of discrete with continuous synapses, showing that under the right conditions their capacities are comparable.</p>
</sec><sec id="s2">
<title>Results</title>
<sec id="s2a">
<title>Setup and Definitions</title>
<p>The single neuron learning paradigm we consider is as follows: at each time-step during the learning phase, a binary pattern is presented and the synapses are updated in an unsupervised manner with a stochastic learning rule. High inputs lead to potentiation, and low inputs to depression of the synapses. Note that if we assume that the inputs cause sufficient post-synaptic activity, the learning rule can be thought of as Hebbian: high (low) pre-synaptic activity paired with post-synaptic activity leads to potentiation (depression). After the learning phase, the neuron is tested with both learned and novel patterns, and it has to perform a recognition task and decide which patterns were learned and which are novel. Alternatively, one can do a (supervised) association task in which some patterns have to be associated with a high output, and others with a low output. This gives qualitatively similar results (see <italic>Associative learning</italic> below).</p>
<p>More precisely, we consider the setup depicted in <xref ref-type="fig" rid="pcbi-1000230-g001">Figure 1</xref>. A neuron has <italic>n</italic> inputs, with weights <italic>w<sub>a</sub></italic>, <italic>a</italic> = 1,…,<italic>n</italic>. At each time-step it stores a <italic>n</italic>-dimensional binary pattern with independent entries <italic>x<sup>a</sup></italic>. The probability of a given entry in the pattern being high is given by the sparseness parameter <italic>p</italic>. We set the value of <italic>x</italic> for the low input state equal to −<italic>p</italic>, and the high state to <italic>q</italic> = (1−<italic>p</italic>), so that the probability density for inputs is given by <italic>P</italic>(<italic>x</italic>) = <italic>qδ</italic>(<italic>x</italic>+<italic>p</italic>)+<italic>pδ</italic>(<italic>x</italic>−<italic>q</italic>). Note that 〈<italic>x</italic>〉 = 0. Using the expression for the SNR below, it can be shown that this is optimal, c.f. <xref ref-type="bibr" rid="pcbi.1000230-Dayan1">[2]</xref>. We assume that <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000230.e001" xlink:type="simple"/></inline-formula>, as the case <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000230.e002" xlink:type="simple"/></inline-formula> is fully analogous.</p>
<fig id="pcbi-1000230-g001" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1000230.g001</object-id><label>Figure 1</label><caption>
<title>Setup and definitions.</title>
<p>Binary input vectors <italic>x<sup>a</sup></italic> are presented, with each component having probability <italic>p</italic> of being in the high state. Synaptic weights <italic>w<sub>a</sub></italic> occupy one of <italic>W</italic> discrete states, whose values are equidistantly spaced around zero. The output <italic>h</italic> is the inner product of the vector of inputs with the weight vector.</p>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000230.g001" xlink:type="simple"/></fig>
<p>Each synapse occupies one of <italic>W</italic> states. The corresponding values of the weight are assumed to be equidistantly spaced around zero, and are written as a <italic>W</italic>–dimensional vector, e.g. for a 3-state synapse <bold><italic>s</italic></bold> = {−1,0,1}, while for a 4-state synapse <bold><italic>s</italic></bold> = {−3,−1,1,3}. In numerical analysis we sometimes saw an increase in information by varying the values of the weight states, although this increase was always small. The state of any given synapse at a given time is described stochastically, by a probability vector <bold><italic>π</italic></bold>. Each entry of <bold><italic>π</italic></bold> is the probability that the synapse is in that state (and hence the weight of the synapse takes the corresponding value in the weight look-up table <bold><italic>s</italic></bold>).</p>
<p>Finally, we note that this setup is of course an abstraction of biological memory storage. For instance, biological coding is believed to be sparse, but the relation between our definition of <italic>p</italic> and actual biological coding sparsity is likely to be complicated. Our model furthermore assumes plasticity at each synapse and for every input. In some other models it has been assumed that only a subset of the inputs can cause synaptic changes <xref ref-type="bibr" rid="pcbi.1000230-BenDayanRubin1">[14]</xref>. Our model could in principle include this by defining null inputs that do not lead to plasticity at all. This would lead to two sparsity parameters: the proportion of inputs that induce plasticity and the proportion of plasticity-inducing inputs that lead to actual strengthening of the synapse.</p>
<sec id="s2a1">
<title>Signal and noise</title>
<p>After learning, the neuron is tested on learned and novel patterns. Presentation of a learned pattern yields a signal which is on average larger than for a novel pattern. Presentation of an unlearned random pattern <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000230.e003" xlink:type="simple"/></inline-formula> leads to a total input in the neuron <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000230.e004" xlink:type="simple"/></inline-formula>. As this novel pattern is uncorrelated to the weight, it has zero mean 〈<italic>h<sub>u</sub></italic>〉 = <italic>n</italic>〈<italic>x</italic>〉〈<italic>w</italic>〉 = 0, and variance<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000230.e005" xlink:type="simple"/><label>(1)</label></disp-formula>where 〈<italic>w</italic>〉 = <bold><italic>s</italic></bold>.<bold><italic>π</italic></bold><sup>∞</sup>, <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000230.e006" xlink:type="simple"/></inline-formula>, and <bold><italic>π</italic></bold><sup>∞</sup> denotes the equilibrium weight distribution. The angular brackets stand for an average over many realizations of the system.</p>
<p>Because the synapses are assumed independent and learning is stochastic, the learning is defined by Markov transition matrices <xref ref-type="bibr" rid="pcbi.1000230-Fusi2">[18]</xref>,<xref ref-type="bibr" rid="pcbi.1000230-Fusi3">[19]</xref>. The entries of these Markov matrices describe the transition probabilities between the synaptic states. If an input is high (low), the synapse is potentiated (depressed) using the Markov matrix <italic>M</italic><sup>+</sup> (<italic>M</italic><sup>−</sup>). The distribution of the weights immediately after a high (low) input is <bold><italic>π</italic></bold><sup>±</sup>(<italic>t</italic> = 0) = <italic>M</italic><sup>±</sup><bold><italic>π</italic></bold><sup>∞</sup>. As subsequent uncorrelated patterns are learned, this signal decays according to <bold><italic>π</italic></bold><sup>±</sup>(<italic>t</italic>) = <italic>M<sup>t</sup></italic><bold><italic>π</italic></bold><sup>±</sup>(<italic>t</italic> = 0), where <italic>t</italic> is the discretized time elapsed since the learning of the pattern, and <italic>M</italic> = <italic>pM</italic><sup>+</sup>+<italic>qM</italic><sup>−</sup> is the average update matrix. Note that the equilibrium distribution <bold><italic>π</italic></bold><sup>∞</sup> is the normalized eigenvector of <italic>M</italic> with eigenvalue 1. When the neuron is presented with a pattern learned <italic>t</italic> time-steps ago, the mean signal <italic>h</italic> = Σ<italic><sub>a</sub>x<sup>a</sup>w<sub>a</sub></italic> is<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000230.e007" xlink:type="simple"/><label>(2)</label></disp-formula>This signal decays so that synapses contain most information on more recent patterns. The decay is multi-exponential, with the longest time-constant equal to the sub-dominant eigenvalue of <italic>M</italic>.</p>
<p>We define the SNR for the pattern stored <italic>t</italic> time-steps ago as<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000230.e008" xlink:type="simple"/><label>(3)</label></disp-formula>For analytic work we approximate <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000230.e009" xlink:type="simple"/></inline-formula>, which yields with Equations 1 and 2<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000230.e010" xlink:type="simple"/><label>(4)</label></disp-formula></p>
</sec><sec id="s2a2">
<title>Information</title>
<p>In the testing phase we measure the mutual information in the neuron's output about whether a test pattern is learned or a novel, unlearned pattern. Given an equal likelihood of the test pattern being some learned pattern (ℓ) or an unlearned pattern (<italic>u</italic>), <italic>P</italic>(ℓ) = <italic>P</italic>(<italic>u</italic>) = 1/2, the information is given by<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000230.e011" xlink:type="simple"/><label>(5)</label></disp-formula>where <italic>P</italic><sub>ℓ</sub>(<italic>h</italic>) and <italic>P<sub>u</sub></italic>(<italic>h</italic>) denote respectively the distribution of the neuron's output <italic>h</italic> in response to the learned and unlearned patterns. If the two output distributions are perfectly separated, the learned pattern contributes one bit of information, while total overlap implies zero information storage.</p>
<p>In general the full distributions <italic>P</italic><sub>ℓ</sub> and <italic>P<sub>u</sub></italic> are needed to calculate the information. Unfortunately, these distributions are complicated multinomials, and can only be calculated when the number of synapses is very small (<xref ref-type="sec" rid="s4">Methods</xref>). We therefore approximate the two distributions <italic>P</italic><sub>ℓ</sub> and <italic>P<sub>u</sub></italic> with Gaussians, and take the variances of these distributions to be equal. An optimal threshold <italic>θ</italic> is imposed and the information (5) reduces to a function of the error rate <italic>r</italic> = <italic>P</italic>(<italic>h</italic><sub>ℓ</sub>&lt;<italic>θ</italic>) = <italic>P</italic>(<italic>h<sub>u</sub></italic>&gt;<italic>θ</italic>). This error rate is a function of the SNR, <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000230.e012" xlink:type="simple"/></inline-formula>. We obtain for the information<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000230.e013" xlink:type="simple"/><label>(6)</label></disp-formula>Importantly, the information Equation 6 is a saturating function of the SNR. For a pattern with a very high SNR, the information approaches one bit. Meanwhile for small SNR, the information is linear in the SNR, <italic>I</italic>(SNR)≈SNR/(4<italic>π</italic>ln2).</p>
<p>As the patterns are independent, the total information is the sum of the information over all patterns presented during learning. We number the patterns using discrete time. The time associated with each pattern is the age of the pattern at the end of the learning phase, as measured by the number of patterns that have been subsequently presented. The total information per synapse is obtained by summing together the information of all patterns and dividing by the number of synapses, thus <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000230.e014" xlink:type="simple"/></inline-formula>. In cases in which the initial SNR is very low we approximate<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000230.e015" xlink:type="simple"/><label>(7)</label></disp-formula>In the opposite limit, when the initial SNR is very high, recent patterns contribute practically one bit of information, and we approximate as if all patterns with more than 1/2 bit actually contribute one bit, while all patterns with less information contribute zero to the information. Our numerical work shows that this is a very accurate approximation. In this limit, the storage capacity of the synapses equals the number of patterns with more than 1/2 bit of information,<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000230.e016" xlink:type="simple"/><label>(8)</label></disp-formula>where <italic>t<sub>c</sub></italic> is implicitly defined as <italic>I</italic>(<italic>t<sub>c</sub></italic>) = 1/2.</p>
</sec></sec><sec id="s2b">
<title>Optimal Transfer Matrices and Information Storage</title>
<p>Storage capacity depends on the <italic>W</italic>×<italic>W</italic> learning matrices <italic>M</italic><sup>+</sup> and <italic>M</italic><sup>−</sup>. To find the maximal storage capacity we need to optimize these matrices, and this optimization depends on sparseness, the number of synapses, and the number of states per synapse. Because these are Markov transition matrices, their columns need sum to one, leaving <italic>W</italic>(<italic>W</italic>−1) free variables per matrix.</p>
<sec id="s2b1">
<title>Binary synapses, few synapses</title>
<p>In the case of binary synapses (W = 2) we write the learning matrices as<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000230.e017" xlink:type="simple"/><label>(9)</label></disp-formula>We first consider the limit of few synapses, for which the initial SNR is low, and use Equation 7 to compute the information. (We keep <italic>np</italic>&gt;1 and <italic>n</italic>≳10 to ensure that there are sufficient distinct patterns to learn.) We find<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000230.e018" xlink:type="simple"/><label>(10)</label></disp-formula>The values of <italic>f</italic><sub>+</sub> and <italic>f</italic><sub>−</sub> that maximize the information depend on the sparsity <italic>p</italic>. There are local maxima at <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000230.e019" xlink:type="simple"/></inline-formula> and (<italic>f</italic><sub>+</sub>, <italic>f</italic><sub>−</sub>) = (1,1). For 0.11&lt;<italic>p</italic>&lt;0.89, one finds that the solution (<italic>f</italic><sub>+</sub>, <italic>f</italic><sub>−</sub>) = (1,1) maximizes the information. In this case the synapse is modified every time-step and only stores the most recent pattern; the information stored on one pattern drops to zero as soon as the next pattern is learned. This leads to equilibrium weight distribution <bold><italic>π</italic></bold><sup>∞</sup> = (<italic>q</italic>, <italic>p</italic>)<italic><sup>T</sup></italic> and the information is<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000230.e020" xlink:type="simple"/><label>(11)</label></disp-formula>which is maximal for dense coding, <italic>I</italic><sub>S</sub> = 0.115.</p>
<p>For sparser patterns <italic>p</italic>&lt;0.11, the other local maximum becomes the global maximum. In particular, for small <italic>p</italic>, this solution is given by <italic>f</italic><sub>+</sub> = 1, <italic>f</italic><sub>−</sub>≈2<italic>p</italic>. Thus potentiation occurs for every high input, but given a low input, depression only occurs stochasticly with probability 2<italic>p</italic>. Note that this is similar to the solution in <xref ref-type="bibr" rid="pcbi.1000230-Amit1">[9]</xref> for binary synapses in an auto-associative network. There too, the learning rate is a factor of <italic>p</italic> slower when the input is negative. For this learning rule, forgetting is not instantaneous and the SNR decays exponentially with time-constant <italic>τ</italic> = 1/(6<italic>p</italic>). In the limit of very sparse patterns the associated equilibrium weight distribution is given by <bold><italic>π</italic></bold><sup>∞</sup> = (2/3,1/3)<italic><sup>T</sup></italic>. Thus, for this regime of binary synapses and sparse patterns, at any one time one would expect to see 67% of synapses occupying the low state. This is interesting to compare to experiments in which about 80% of the synapses were found to be in the low state <xref ref-type="bibr" rid="pcbi.1000230-OConnor1">[7]</xref>. The information per synapse is<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000230.e021" xlink:type="simple"/><label>(12)</label></disp-formula>There are two important observations to be made from Equations 11 and 12: 1) information remains finite at low <italic>p</italic>; 2) as long as the total information is small, each additional synapse contributes equally to the information.</p>
</sec><sec id="s2b2">
<title>Binary synapses, many synapses</title>
<p>We next consider the limit of many synapses, for which the initial SNR is high. With Equation 8 we find<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000230.e022" xlink:type="simple"/><label>(13)</label></disp-formula>where the constant <italic>s</italic>≈6.02 is the value of the SNR which corresponds to 1/2 bit of information. The optimal learning parameters can again be found by maximizing the information and are in this limit <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000230.e023" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000230.e024" xlink:type="simple"/></inline-formula>, leading to equilibrium weight distribution <bold><italic>π</italic></bold><sup>∞</sup> = (1/2,1/2)<italic><sup>T</sup></italic>. In this regime learning is stochastic, with the probability for potentiation/depression decreasing as the number of synapses increases. The intuition is that when there are many synapses, it would be wasteful for all synapses to learn about all patterns. Instead, only a small fraction of the synapses needs to store the pattern in order to have a good memory of it. The corresponding information is<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000230.e025" xlink:type="simple"/><label>(14)</label></disp-formula>Hence, as <italic>n</italic> becomes large, adding extra synapses no longer leads to substantial improvement in information storage capacity, but only an increase with the square root of the number of synapses. The memory decay time-constant in this case is <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000230.e026" xlink:type="simple"/></inline-formula>.</p>
<p>To verify the above results, and to examine the information between the large and small <italic>n</italic> limits, we numerically maximized the information by searching the space of possible learning matrices (<xref ref-type="sec" rid="s4">Methods</xref>). This means that for each data point we optimized the parameters <italic>f</italic><sub>+</sub> and <italic>f</italic><sub>−</sub>. We find there is a smooth interpolation between the two limiting cases, and good match with the theory. For given sparsity, there is a critical number of synapses beyond which addition of further synapses does not substantially improve information capacity, <xref ref-type="fig" rid="pcbi-1000230-g002">Figure 2</xref>. This critical number is the point at which the direct proportionality of the information to the SNR Equation 7, breaks down. That is, the <italic>n</italic> for which the initial SNR becomes of order 1. For dense patterns, this occurs for just a few synapses, while for sparse patterns this number is proportional to <italic>p</italic><sup>−1</sup>.</p>
<fig id="pcbi-1000230-g002" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1000230.g002</object-id><label>Figure 2</label><caption>
<title>Capacity of binary synapses.</title>
<p>Information storage capacity per synapse versus the number of synaptic inputs, for dense (<italic>p</italic> = 0.5), sparse (<italic>p</italic> = 0.05), and very sparse (<italic>p</italic> = 0.005) coding. Lines show analytic results, while points show numerical results. For small number of synapses, each additional synapse contributes equally to the information. However, for many synapses, information per synapse decreases as <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000230.e027" xlink:type="simple"/></inline-formula>.</p>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000230.g002" xlink:type="simple"/></fig>
<p>In terms of <italic>total</italic> information, this result means there is linear growth for small number of synapses, but beyond the critical number addition of further synapses only leads to an increase with the square root of the number of synapses, a rather less substantial growth.</p>
</sec><sec id="s2b3">
<title>Comparison with Willshaw net</title>
<p>We compare the storage capacity found here with that of a Willshaw net <xref ref-type="bibr" rid="pcbi.1000230-Willshaw1">[1]</xref>. This is of interest as this also uses binary synapses, although in a non-stochastic manner, and has a high capacity. In Willshaw's model, all synapses initially occupy a silent (<italic>w</italic> = 0) state, and learning consists solely of potentiation to an active (<italic>w</italic> = 1) state when a high input is presented. Each input <italic>x</italic> takes the value 0 (off) or 1 (on), and each pattern contains a fixed number, <italic>np</italic>, of positive inputs. As more patterns are presented, more synapses move to the active state, and eventually all memories are lost. However, when only a finite, optimal number of patterns are presented, this performs well.</p>
<p>Since a learned pattern definitely gives the signal <italic>h</italic> = <italic>np</italic>, the threshold for recognizing a pattern as “learned” is set to <italic>h</italic> = <italic>np</italic>. When an unlearned pattern is presented, there is still a chance that the response will be “learned”. When <italic>m</italic> patterns have been presented, the chance that a given synapse is still in the silent state is <italic>q<sup>m</sup></italic>. Hence the probability of an unlearned pattern being falsely recognized as “learned” is <italic>ε</italic> = (1−<italic>q<sup>m</sup></italic>)<italic><sup>np</sup></italic>. This is the only source of error. The information stored on any one pattern is found from Equation 5, restricted to binary output:<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000230.e028" xlink:type="simple"/><label>(15)</label></disp-formula>The total information per synapse <italic>I</italic><sub>S</sub> = (<italic>m</italic>/<italic>n</italic>)<italic>I</italic><sub>Patt</sub>. Given the number of synapses, and the sparsity, one can optimize the information with respect to the number of patterns. In the limit of few synapses, and sparse patterns, one can achieve <italic>I</italic><sub>S</sub> = 0.11 bits, which is several times higher than the storage we obtain for our model when coding is sparse. However, as the number of synapses increases, storage decays with <italic>n</italic><sup>−1</sup>, which is much faster than the <italic>n</italic><sup>−1/2</sup> decay found here. (Aside: Willshaw obtains a maximum capacity of <italic>I</italic><sub>S</sub> = 0.69 bits within his framework <xref ref-type="bibr" rid="pcbi.1000230-Willshaw1">[1]</xref>,<xref ref-type="bibr" rid="pcbi.1000230-Brunel1">[20]</xref>. This is for an associative memory task, and a different information measure from that considered here. There the expected number, <italic>E</italic>, of errors in the output is calculated as a function of the number of stored associations. The number, <italic>m</italic>, of associations that are then presented is that for which <italic>E</italic> = 1. The information stored is defined as the total information content of the <italic>m</italic> output patterns presented.)</p>
</sec><sec id="s2b4">
<title>Multi-state synapses</title>
<p>Next, we examine whether storage capacity increases as the number of synaptic states increases. Even under small or large <italic>n</italic> approximations, the information obtained from Equation 4 is in general a very complicated function of the learning parameters, due to the complexity of the invariant eigenvector <bold><italic>π</italic></bold><sup>∞</sup> of a general Markov matrix <italic>M</italic>. Thus optimal learning must be found numerically by explicitly varying all matrix elements; this must be restricted to synapses with just a few states (up to 8). For large <italic>n</italic> we find that the optimal transfer matrix is band diagonal, meaning the only transitions are one-step potentiation and depression. Moreover, we find that for fixed number of synaptic states, the (optimized) information behaves similar to that of binary synapses.</p>
<p>In the dense (<italic>p</italic> = 1/2) case, we find that the optimal learning rules balance potentiation and depression, by satisfying (<italic>M</italic><sup>+</sup>)<italic><sub>ij</sub></italic> = (<italic>M</italic><sup>−</sup>)<italic><sub>W</sub></italic><sub>+1−<italic>j</italic>,<italic>W</italic>+1−<italic>i</italic></sub>. In the limit of many synapses, the optimal learning rule takes a simple form<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000230.e029" xlink:type="simple"/><label>(16)</label></disp-formula>with <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000230.e030" xlink:type="simple"/></inline-formula>.</p>
<p>Perhaps one would expect optimal storage if, in equilibrium, synapses were uniformly distributed, thus making equal use of all the states. However, the equilibrium weight distribution is peaked at both ends, and low and flat in the middle, <bold><italic>π</italic></bold><sup>∞</sup>∝(1,<italic>f</italic>,<italic>f</italic>,…,<italic>f</italic>,1)<italic><sup>T</sup></italic>. The associated information is<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000230.e031" xlink:type="simple"/><label>(17)</label></disp-formula>and the corresponding time-constant for the SNR is given by <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000230.e032" xlink:type="simple"/></inline-formula>. Importantly, the information grows linearly with the number of synaptic states. However, validity of these results requires <italic>fW</italic> to be small to enable series expansion in <italic>f</italic>, i.e. information is linear in <italic>W</italic> if <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000230.e033" xlink:type="simple"/></inline-formula>.</p>
<p>In the sparse case there seems to be no simple optimal transfer matrix, even in the large <italic>n</italic> limit. However, we can infer a formula for <italic>I</italic><sub>S</sub> from our analytic and numerical results. A formula consistent with the binary synapse information Equation 14, as well as the case of dense patterns, Equation 17 is<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000230.e034" xlink:type="simple"/><label>(18)</label></disp-formula>Assuming that this formula, as for the binary synapse, is the leading term in a series expansion in the parameters <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000230.e035" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000230.e036" xlink:type="simple"/></inline-formula>, and that we need <italic>Wf</italic><sub>+</sub> and <italic>Wf</italic><sub>−</sub> small for it to be accurate, Equation 18 is valid when <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000230.e037" xlink:type="simple"/></inline-formula>. We have confirmed from simulations that this formula is a good fit for a wide range of parameters, <xref ref-type="fig" rid="pcbi-1000230-g003">Figure 3</xref>.</p>
<fig id="pcbi-1000230-g003" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1000230.g003</object-id><label>Figure 3</label><caption>
<title>Capacity of multi-state synapses.</title>
<p>Information storage capacity per synapse versus the number <italic>W</italic> of synaptic states, for dense (<italic>p</italic> = 0.5) and sparse (<italic>p</italic> = 0.05) coding. Lines show analytic results (when available), whilst points show numerical results. When the neuron has many synapses, the storage capacity initially increases with the number of synaptic states, but eventually saturates.</p>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000230.g003" xlink:type="simple"/></fig>
<p>For large <italic>W</italic>, or equivalently small <italic>n</italic>, the capacity saturates and becomes independent of <italic>W</italic>, see <xref ref-type="fig" rid="pcbi-1000230-g003">Figure 3</xref>. This is also observed with a number of different (sub-optimal) learning rules studied in <xref ref-type="bibr" rid="pcbi.1000230-Fusi2">[18]</xref>. These learning rules had the property that the product of initial SNR and the time-constant <italic>τ</italic> of SNR decay is independent of <italic>W</italic>. See Table 1 in <xref ref-type="bibr" rid="pcbi.1000230-Fusi2">[18]</xref> for this remarkable identity, noting that the SNR there equals its square root here, and that <italic>α</italic> = 1/<italic>W</italic>. For large <italic>W</italic> the initial SNR is small, and hence the information can be approximated as <italic>I</italic>∼Σ<italic><sub>t</sub></italic>SNR(0)exp(−<italic>t</italic>/<italic>τ</italic>)≈<italic>τ</italic> SNR(0). Also for the optimal learning rule studied here the information becomes independent of <italic>W</italic>, <xref ref-type="fig" rid="pcbi-1000230-g003">Figure 3</xref>.</p>
</sec><sec id="s2b5">
<title>Hard-bound learning rules</title>
<p>Finally we study, for large <italic>n</italic>, the performance of a simple “hard-bound” learning rule, i.e. a learning rule that yields a uniform equilibrium weight distribution. Under this rule, whose SNR dynamics were previously studied in <xref ref-type="bibr" rid="pcbi.1000230-Fusi2">[18]</xref>, a positive (negative) input gives one-step potentiation (depression) with probability <italic>f</italic><sub>+</sub> (<italic>f</italic><sub>−</sub>). I.e. <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000230.e038" xlink:type="simple"/></inline-formula>, but <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000230.e039" xlink:type="simple"/></inline-formula>. For <italic>W</italic>≥4 the optimal probabilities satisfy <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000230.e040" xlink:type="simple"/></inline-formula> <xref ref-type="bibr" rid="pcbi.1000230-Fusi2">[18]</xref>, for which<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000230.e041" xlink:type="simple"/><label>(19)</label></disp-formula>Here the latter approximation is for large <italic>W</italic>. The time-constant of the SNR decay is <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000230.e042" xlink:type="simple"/></inline-formula>. This sub-optimal learning rule gives an information capacity of the same functional form as the optimal learning rule, but performs only 70% as well.</p>
<p>Given that simple stochastic learning performs almost as well as the optimal learning rule, we wondered how well a simple deterministic learning rule performs in comparison. In that case, synapses are always potentiated or depressed, there is no stochastic element, i.e. <italic>f</italic><sub>+</sub> = <italic>f</italic><sub>−</sub> = 1. One finds<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000230.e043" xlink:type="simple"/><label>(20)</label></disp-formula>The memory decay time here is <italic>τ</italic> = <italic>W</italic><sup>2</sup>/<italic>π</italic><sup>2</sup>. Although the information grows faster with <italic>W</italic>, the 1/<italic>n</italic> behavior means this performs much worse than optimal stochastic learning for any reasonable number of synapses. Interestingly, 1/<italic>n</italic> is the same decay as for the Willshaw net, suggesting that this is a general feature of deterministic learning rules.</p>
</sec><sec id="s2b6">
<title>Comparison to continuous, unbounded synapses</title>
<p>The above results raise the question whether binary synapses are much worse than continuous synapses. It is interesting to note that even continuous, unbounded synapses can store only a limited amount of information. We consider a setup analogous to that of Dayan and Willshaw <xref ref-type="bibr" rid="pcbi.1000230-Dayan1">[2]</xref>. Prior to learning, all weights are set to zero. Learning involves potentiation by a fixed amount when a positive input is presented, and depression by a fixed amount when a negative input is presented. With <italic>m</italic> patterns learned, the mean and variance of the output for an unlearned pattern are respectively 〈<italic>h<sub>u</sub></italic>〉 = 0 and <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000230.e044" xlink:type="simple"/></inline-formula>, while for a learned pattern, 〈<italic>h</italic><sub>ℓ</sub>〉 = <italic>npq</italic>. Hence SNR = <italic>n</italic>/<italic>m</italic> for all patterns. The information is maximal at <italic>I</italic><sub>S</sub>≈0.11 when <italic>m</italic>≫<italic>n</italic>≫1. This result indicates that under the right conditions the capacity of binary synapses indeed approaches that of continuous unbounded synapses. Note that in this model <italic>I</italic><sub>S</sub> is independent of <italic>n</italic> for large <italic>n</italic>. This is consistent with the results above for bounded synapses: in the limit <italic>W</italic>→∞ one necessarily enters the regime in which <italic>I</italic><sub>S</sub> is independent of <italic>n</italic>.</p>
</sec><sec id="s2b7">
<title>Associative learning</title>
<p>In all the above the neuron's task was to correctly recognize patterns that were learned before. We wondered if our results generalize to a case in which the neuron has to associate one half of the patterns to a low output and the other half of the patterns to a high output. This is a supervised learning paradigm which is specified by defining what happens when the input is high/low and the desired output is high/low. In other words, there are four learning matrices <xref ref-type="bibr" rid="pcbi.1000230-Fusi3">[19]</xref>. The analysis of this case is therefore more complicated. The result of simulations that optimize these matrices is shown in <xref ref-type="fig" rid="pcbi-1000230-g004">Figure 4</xref>. The information storage is higher than for the task above, by about a factor 2 for dense patterns, and a factor 4 for sparse patterns. However, the shape of the matrices and the qualitative dependence on the number of synapses is the same, demonstrating that qualitatively our conclusions carry over to other learning paradigms as well.</p>
<fig id="pcbi-1000230-g004" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1000230.g004</object-id><label>Figure 4</label><caption>
<title>The memory information capacity of a neuron with binary synapses that has been trained on an association task.</title>
<p>The capacities for the recognition task (<xref ref-type="fig" rid="pcbi-1000230-g002">Figure 2</xref>) are redrawn for comparison (dashed lines). The capacities for association (solid lines) are higher but follow the same trend.</p>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1000230.g004" xlink:type="simple"/></fig></sec></sec></sec><sec id="s3">
<title>Discussion</title>
<p>We have studied pattern storage using discrete, bounded synapses. Learning rules for these synapses can be defined by stochastic transition matrices <xref ref-type="bibr" rid="pcbi.1000230-Fusi2">[18]</xref>,<xref ref-type="bibr" rid="pcbi.1000230-Fusi3">[19]</xref>. In this setup an SNR based analysis provides two contradictory measures of performance: the quality of learning (the initial SNR), and the rate of forgetting <xref ref-type="bibr" rid="pcbi.1000230-Fusi2">[18]</xref>. With our single measure of storage capacity based on Shannon information, learning rules can be optimized. The optimal learning rule depends on the number of synapses <italic>n</italic> and the coding sparseness <italic>p</italic>, as well as on the number of states <italic>W</italic>. Our analysis was restricted to about 8 states per synapse, although we have no reason to believe that extrapolation to larger numbers would not hold.</p>
<p>Given optimal learning we find two regimes for the information storage capacity: 1. When the number of synapses is small, information per synapse is constant and approximately independent of the number of synaptic states. 2. When the number of synapses is large, capacity per synapse increases linearly with <italic>W</italic> but decreases as <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000230.e045" xlink:type="simple"/></inline-formula>. The critical <italic>n</italic> that separates the two regimes is dependent on sparseness and the number of weight states. The optimal learning rule for regime 2 has band-diagonal transition matrices, and in the dense case (<italic>p</italic> = 1/2), these take a particularly simple form, see Equation 16. Capacity of order <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000230.e046" xlink:type="simple"/></inline-formula> in the large <italic>n</italic> limit has been reached in other studies of bounded synapses <xref ref-type="bibr" rid="pcbi.1000230-Fusi1">[10]</xref>,<xref ref-type="bibr" rid="pcbi.1000230-Fusi4">[21]</xref>, but has not been exceeded to our knowledge. It remains a challenge to construct a model that does better than this.</p>
<p>The implications for biology depend on the precise nature of single neuron computation. If a neuron can only compute the sum of all its inputs then we might conclude the following. As synapses are metabolically expensive <xref ref-type="bibr" rid="pcbi.1000230-Attwell1">[22]</xref>, biology should choose parameters such that the number of synapses per neuron does not exceed the critical number much. Although there are currently no accurate biological estimates for either the number of weight states, or the sparsity, for binary synapses with <italic>p</italic> = 0.005, the critical number of synapses is close to the number of synapses (∼10,000) per neuron in the hippocampus (see <xref ref-type="fig" rid="pcbi-1000230-g002">Figure 2</xref>). However, if the neurons can do compartmentalized processing so that the dendrite is the unit of computation <xref ref-type="bibr" rid="pcbi.1000230-Poirazi1">[23]</xref>, then one could think of this model as representing a single dendrite, and we could conclude that the number of synapses per dendrite might be optimized for information storage capacity. For binary synapses with <italic>p</italic> = 0.005 choosing the number of synapses to be several hundred is also close to optimal.</p>
<p>Furthermore, our results predict that when synapses are binary, coding is sparse, and learning is optimized, that at equilibrium about 67% of synapses should occupy the low state. This is not far off the experimental figure of 80% <xref ref-type="bibr" rid="pcbi.1000230-OConnor1">[7]</xref>.</p>
<p>We have directly compared discrete to continuous synapses. For few synapses and dense coding, binary synapses can store up to 0.11 bits of information, which is comparable to the maximal capacity of continuous synapses. However, for sparse coding and many synapses per neuron, the capacity of binary synapses is reduced. Hence, if one considered only information storage, one would conclude that, unsurprisingly, unbounded synapses perform better than binary synapses. However, in unbounded synapses, weight decay mechanisms must be introduced to prevent runaway, so the information storage capacity is necessarily reduced in on-line learning <xref ref-type="bibr" rid="pcbi.1000230-Nadal1">[16]</xref>,<xref ref-type="bibr" rid="pcbi.1000230-Sterratt1">[17]</xref>. In contrast, for bounded, discrete synapses with ongoing potentiation and depression, such as those considered here, old memories undergo “graceful decay” as they are automatically overwritten by new memories <xref ref-type="bibr" rid="pcbi.1000230-Parisi1">[8]</xref>,<xref ref-type="bibr" rid="pcbi.1000230-Amit1">[9]</xref>,<xref ref-type="bibr" rid="pcbi.1000230-Braunstein1">[12]</xref>,<xref ref-type="bibr" rid="pcbi.1000230-Baldassi1">[13]</xref>,<xref ref-type="bibr" rid="pcbi.1000230-Leibold1">[15]</xref>. Thus discrete, bounded synapses allow for realistic learning with a good capacity.</p>
<p>Finally, it is worth noting that although using Shannon information is a principled way to measure storage, it is unclear whether for all biological scenarios it is the best measure of performance, c.f. <xref ref-type="bibr" rid="pcbi.1000230-Clark1">[24]</xref>. The information can be higher when storing very many memories with a very low SNR, than when storing just a few patterns very well. This might be undesirable in some biological cases. However, if many neurons work in parallel on the same task, it is likely that all information contributes to performance, and thus the total bits per synapse is a useful measure.</p>
</sec><sec id="s4">
<title>Methods</title>
<p>To obtain the information capacity numerically, we used Matlab and implemented the following process. For a given number of synaptic states, number of synapses and sparsity, we used Matlab's fminsearchbnd to search through the parameter space of all possible transfer matrices <italic>M</italic><sup>+</sup> and <italic>M</italic><sup>−</sup>. That is, all matrix elements were constrained to take values between 0 and 1, and all columns were required to sum to 1. For each set of transfer matrices we first obtained the equilibrium weight distribution <bold><italic>π</italic></bold><sup>∞</sup> as the eigenvector with eigenvalue 1 of the matrix <italic>M</italic>. Then we computed the means and variances of the output for learned and unlearned patterns from Equations 2 and 1, and further used that <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1000230.e047" xlink:type="simple"/></inline-formula>. Equations 6 and 3 then gave the information stored about the pattern presented at each time-step. To calculate the total information, this was summed over sufficient time-steps.</p>
<p>In particular, in the case of many weight states (large <italic>W</italic>) and sparse patterns, the maximization would sometimes get stuck in local maxima. In those cases we did multiple (up to 50) restarts to make sure that the solution found was truly optimal.</p>
<p>Our results can also be compared to the so-called cascade model, which was recently proposed to have high SNR and slow memory decay <xref ref-type="bibr" rid="pcbi.1000230-Fusi1">[10]</xref>. In order to compare the cascade model to our results, we created a six-state cascade model using learning matrices that only had transitions according to the state diagram in <xref ref-type="bibr" rid="pcbi.1000230-Fusi1">[10]</xref>. These transition rates were then optimized. We found that the information capacity of the optimized cascade model was always larger than a two-state model, but always lower than our six state model with transfer matrix Equation 16. Only when the number of synapses was small (and the information became equal to the integral over the SNR), did the two-state, six-state and cascade models give identical performance. For a higher number of states the results could be different, but this study suggests that, at least for a small number of states, the cascade model is sub-optimal with respect to Shannon information capacity.</p>
<p>Finally, we explored how well the Gaussian approximation worked. We calculated the full multinomial distribution of the total input <italic>h</italic> and applied an optimal threshold. Because of a combinatorial explosion, this was only feasible for up to 100 synapses. When the information was maximized this way, the information increased to about 0.3 for <italic>n</italic> = 1 binary synapses storing dense patterns, but for more than <italic>n</italic> = 10 synapses the results were indistinguishable from the presented theory.</p>
</sec></body>
<back>
<ack>
<p>We thank Henning Sprekeler, Peter Latham, Jesus Cortes, David Sterratt, Guy Billings, and Robert Urbanczik for discussion.</p>
</ack>
<ref-list>
<title>References</title>
<ref id="pcbi.1000230-Willshaw1"><label>1</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Willshaw</surname><given-names>DJ</given-names></name>
<name name-style="western"><surname>Buneman</surname><given-names>OP</given-names></name>
<name name-style="western"><surname>Longuet-Higgins</surname><given-names>HC</given-names></name>
</person-group>             <year>1969</year>             <article-title>Non-holographic associative memory.</article-title>             <source>Nature</source>             <volume>222</volume>             <fpage>960</fpage>             <lpage>993</lpage>          </element-citation></ref>
<ref id="pcbi.1000230-Dayan1"><label>2</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Dayan</surname><given-names>P</given-names></name>
<name name-style="western"><surname>Willshaw</surname><given-names>DJ</given-names></name>
</person-group>             <year>1991</year>             <article-title>Optimising synaptic learning rules in linear associative memories.</article-title>             <source>Biol Cybern</source>             <volume>65</volume>             <fpage>253</fpage>             <lpage>265</lpage>          </element-citation></ref>
<ref id="pcbi.1000230-Hopfield1"><label>3</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Hopfield</surname><given-names>JJ</given-names></name>
</person-group>             <year>1982</year>             <article-title>Neural networks and physical systems with emergent collective computational abilities.</article-title>             <source>Proc Natl Acad Sci U S A</source>             <volume>79</volume>             <fpage>2554</fpage>             <lpage>2558</lpage>          </element-citation></ref>
<ref id="pcbi.1000230-Meunier1"><label>4</label><element-citation publication-type="other" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Meunier</surname><given-names>C</given-names></name>
<name name-style="western"><surname>Nadal</surname><given-names>JP</given-names></name>
</person-group>             <year>1995</year>             <article-title>Sparsely coded neural networks.</article-title>             <person-group person-group-type="editor">
<name name-style="western"><surname>Arbib</surname><given-names>MA</given-names></name>
</person-group>             <source>The handbook of brain theory, 1st edition</source>             <publisher-loc>Cambridge, MA</publisher-loc>             <publisher-name>MIT press</publisher-name>             <fpage>899</fpage>             <lpage>901</lpage>          </element-citation></ref>
<ref id="pcbi.1000230-Crick1"><label>5</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Crick</surname><given-names>F</given-names></name>
</person-group>             <year>1984</year>             <article-title>Memory and molecular turnover.</article-title>             <source>Nature</source>             <volume>312</volume>             <fpage>101</fpage>          </element-citation></ref>
<ref id="pcbi.1000230-Petersen1"><label>6</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Petersen</surname><given-names>CCH</given-names></name>
<name name-style="western"><surname>Malenka</surname><given-names>RC</given-names></name>
<name name-style="western"><surname>Nicoll</surname><given-names>RA</given-names></name>
<name name-style="western"><surname>Hopfield</surname><given-names>JJ</given-names></name>
</person-group>             <year>1998</year>             <article-title>All-or-none potentiation at CA3-CA1 synapses.</article-title>             <source>Proc Natl Acad Sci U S A</source>             <volume>95</volume>             <fpage>4732</fpage>             <lpage>4737</lpage>          </element-citation></ref>
<ref id="pcbi.1000230-OConnor1"><label>7</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>O'Connor</surname><given-names>DH</given-names></name>
<name name-style="western"><surname>Wittenberg</surname><given-names>GM</given-names></name>
<name name-style="western"><surname>Wang</surname><given-names>SSH</given-names></name>
</person-group>             <year>2005</year>             <article-title>Graded bidirectional synaptic plasticity is composed of switch-like unitary events.</article-title>             <source>Proc Natl Acad Sci U S A</source>             <volume>102</volume>             <fpage>9679</fpage>             <lpage>9684</lpage>          </element-citation></ref>
<ref id="pcbi.1000230-Parisi1"><label>8</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Parisi</surname><given-names>G</given-names></name>
</person-group>             <year>1986</year>             <article-title>A memory which forgets.</article-title>             <source>J Phys A: Math Gen</source>             <volume>19</volume>             <fpage>L617</fpage>             <lpage>L620</lpage>          </element-citation></ref>
<ref id="pcbi.1000230-Amit1"><label>9</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Amit</surname><given-names>D</given-names></name>
<name name-style="western"><surname>Fusi</surname><given-names>S</given-names></name>
</person-group>             <year>1994</year>             <article-title>Learning in neural networks with material synapses.</article-title>             <source>Neural Comput</source>             <volume>6</volume>             <fpage>957</fpage>             <lpage>982</lpage>          </element-citation></ref>
<ref id="pcbi.1000230-Fusi1"><label>10</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Fusi</surname><given-names>S</given-names></name>
<name name-style="western"><surname>Drew</surname><given-names>PJ</given-names></name>
<name name-style="western"><surname>Abbott</surname><given-names>LF</given-names></name>
</person-group>             <year>2005</year>             <article-title>Cascade models of synaptically stored memories.</article-title>             <source>Neuron</source>             <volume>45</volume>             <fpage>599</fpage>             <lpage>611</lpage>          </element-citation></ref>
<ref id="pcbi.1000230-Senn1"><label>11</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Senn</surname><given-names>W</given-names></name>
<name name-style="western"><surname>Fusi</surname><given-names>S</given-names></name>
</person-group>             <year>2005</year>             <article-title>Learning only when necessary: better memories of correlated patterns in networks with bounded synapses.</article-title>             <source>Neural Comput</source>             <volume>17</volume>             <fpage>2106</fpage>             <lpage>2138</lpage>          </element-citation></ref>
<ref id="pcbi.1000230-Braunstein1"><label>12</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Braunstein</surname><given-names>A</given-names></name>
<name name-style="western"><surname>Zecchina</surname><given-names>R</given-names></name>
</person-group>             <year>2006</year>             <article-title>Learning by message passing in networks of discrete synapses.</article-title>             <source>Phys Rev Lett</source>             <volume>96</volume>             <fpage>030201</fpage>          </element-citation></ref>
<ref id="pcbi.1000230-Baldassi1"><label>13</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Baldassi</surname><given-names>C</given-names></name>
<name name-style="western"><surname>Braunstein</surname><given-names>A</given-names></name>
<name name-style="western"><surname>Brunel</surname><given-names>N</given-names></name>
<name name-style="western"><surname>Zecchina</surname><given-names>R</given-names></name>
</person-group>             <year>2007</year>             <article-title>Efficient supervised learning in networks with binary synapses.</article-title>             <source>Proc Natl Acad Sci U S A</source>             <volume>104</volume>             <fpage>11079</fpage>             <lpage>11084</lpage>          </element-citation></ref>
<ref id="pcbi.1000230-BenDayanRubin1"><label>14</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Ben Dayan Rubin</surname><given-names>DD</given-names></name>
<name name-style="western"><surname>Fusi</surname><given-names>S</given-names></name>
</person-group>             <year>2007</year>             <article-title>Long memory lifetimes require complex synapses and limited sparseness.</article-title>             <source>Frontiers Comput Neurosci</source>             <volume>1</volume>             <fpage>7</fpage>             <comment>doi:10.3389/neuro.10/007.2007</comment>          </element-citation></ref>
<ref id="pcbi.1000230-Leibold1"><label>15</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Leibold</surname><given-names>C</given-names></name>
<name name-style="western"><surname>Kempter</surname><given-names>R</given-names></name>
</person-group>             <year>2008</year>             <article-title>Sparseness constrains the prolongation of memory lifetime via synaptic metaplasticity.</article-title>             <source>Cerebral Cortex</source>             <volume>18</volume>             <fpage>67</fpage>             <lpage>77</lpage>          </element-citation></ref>
<ref id="pcbi.1000230-Nadal1"><label>16</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Nadal</surname><given-names>J</given-names></name>
<name name-style="western"><surname>Toulouse</surname><given-names>G</given-names></name>
<name name-style="western"><surname>Changeux</surname><given-names>J</given-names></name>
<name name-style="western"><surname>Dehaene</surname><given-names>S</given-names></name>
</person-group>             <year>1986</year>             <article-title>Networks of Formal Neurons and Memory Palimpsests.</article-title>             <source>Europhysics Letters (EPL)</source>             <volume>1</volume>             <fpage>535</fpage>             <lpage>542</lpage>          </element-citation></ref>
<ref id="pcbi.1000230-Sterratt1"><label>17</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Sterratt</surname><given-names>DC</given-names></name>
<name name-style="western"><surname>Willshaw</surname><given-names>D</given-names></name>
</person-group>             <year>2008</year>             <article-title>Inhomogeneities in heteroassociative memories with linear learning rules.</article-title>             <source>Neural Comput</source>             <volume>20</volume>             <fpage>311</fpage>             <lpage>344</lpage>          </element-citation></ref>
<ref id="pcbi.1000230-Fusi2"><label>18</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Fusi</surname><given-names>S</given-names></name>
<name name-style="western"><surname>Abbott</surname><given-names>LF</given-names></name>
</person-group>             <year>2007</year>             <article-title>Limits on the memory storage capacity of bounded synapses.</article-title>             <source>Nat Neurosci</source>             <volume>10</volume>             <fpage>485</fpage>             <lpage>493</lpage>             <comment>doi:10.1038/nn1859</comment>          </element-citation></ref>
<ref id="pcbi.1000230-Fusi3"><label>19</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Fusi</surname><given-names>S</given-names></name>
</person-group>             <year>2002</year>             <article-title>Hebbian spike-driven synaptic plasticity for learning patterns of mean firing rates.</article-title>             <source>Biol Cybern</source>             <volume>87</volume>             <fpage>459</fpage>             <lpage>470</lpage>          </element-citation></ref>
<ref id="pcbi.1000230-Brunel1"><label>20</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Brunel</surname><given-names>N</given-names></name>
</person-group>             <year>1994</year>             <article-title>Storage capacity of neural networks: effect of the fluctuations of the number of active neurons per memory.</article-title>             <source>Phys A</source>             <volume>27</volume>             <fpage>4783</fpage>             <lpage>4789</lpage>          </element-citation></ref>
<ref id="pcbi.1000230-Fusi4"><label>21</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Fusi</surname><given-names>S</given-names></name>
<name name-style="western"><surname>Senn</surname><given-names>W</given-names></name>
</person-group>             <year>2006</year>             <article-title>Eluding oblivion with smart stochastic selection of synaptic updates.</article-title>             <source>Chaos</source>             <volume>16</volume>             <fpage>026112</fpage>          </element-citation></ref>
<ref id="pcbi.1000230-Attwell1"><label>22</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Attwell</surname><given-names>D</given-names></name>
<name name-style="western"><surname>Laughlin</surname><given-names>SB</given-names></name>
</person-group>             <year>2001</year>             <article-title>An energy budget for signaling in the grey matter of the brain.</article-title>             <source>Journal of Cerebral Blood Flow and Metabolism</source>             <volume>21</volume>             <fpage>1133</fpage>             <lpage>1145</lpage>          </element-citation></ref>
<ref id="pcbi.1000230-Poirazi1"><label>23</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Poirazi</surname><given-names>P</given-names></name>
<name name-style="western"><surname>Brannon</surname><given-names>T</given-names></name>
<name name-style="western"><surname>Mel</surname><given-names>B</given-names></name>
</person-group>             <year>2003</year>             <article-title>Pyramidal Neuron as Two-Layer Neural Network.</article-title>             <source>Neuron</source>             <volume>37</volume>             <fpage>989</fpage>             <lpage>999</lpage>          </element-citation></ref>
<ref id="pcbi.1000230-Clark1"><label>24</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Clark</surname><given-names>P</given-names></name>
<name name-style="western"><surname>van Rossum</surname><given-names>MC</given-names></name>
</person-group>             <year>2006</year>             <article-title>The optimal synapse for sparse, binary signals in the rod pathway.</article-title>             <source>Neural Comput</source>             <volume>18</volume>             <fpage>26</fpage>             <lpage>44</lpage>          </element-citation></ref>
</ref-list>

</back>
</article>