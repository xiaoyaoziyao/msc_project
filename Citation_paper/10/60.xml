<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article
  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article" dtd-version="3.0" xml:lang="en">
<front>
<journal-meta>
<journal-id journal-id-type="nlm-ta">PLoS ONE</journal-id>
<journal-id journal-id-type="publisher-id">plos</journal-id>
<journal-id journal-id-type="pmc">plosone</journal-id><journal-title-group>
<journal-title>PLoS ONE</journal-title></journal-title-group>
<issn pub-type="epub">1932-6203</issn>
<publisher>
<publisher-name>Public Library of Science</publisher-name>
<publisher-loc>San Francisco, USA</publisher-loc></publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">PONE-D-13-07186</article-id>
<article-id pub-id-type="doi">10.1371/journal.pone.0073400</article-id>
<article-categories><subj-group subj-group-type="heading"><subject>Research Article</subject></subj-group></article-categories>
<title-group>
<article-title>Asymmetric Continuous-Time Neural Networks without Local Traps for Solving Constraint Satisfaction Problems</article-title>
<alt-title alt-title-type="running-head">Asymmetric Neural Network for Optimization</alt-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Molnár</surname><given-names>Botond</given-names></name><xref ref-type="aff" rid="aff1"/></contrib>
<contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Ercsey-Ravasz</surname><given-names>Mária</given-names></name><xref ref-type="aff" rid="aff1"/><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib>
</contrib-group>
<aff id="aff1"><addr-line>Faculty of Physics, Babeş-Bolyai University, Cluj-Napoca, RO-400084, Romania</addr-line></aff>
<contrib-group>
<contrib contrib-type="editor" xlink:type="simple"><name name-style="western"><surname>Gómez</surname><given-names>Sergio</given-names></name>
<role>Editor</role>
<xref ref-type="aff" rid="edit1"/></contrib>
</contrib-group>
<aff id="edit1"><addr-line>Universitat Rovira i Virgili, Spain</addr-line></aff>
<author-notes>
<corresp id="cor1">* E-mail: <email xlink:type="simple">ercsey.ravasz@phys.ubbcluj.ro</email></corresp>
<fn fn-type="conflict"><p>The authors have declared that no competing interests exist.</p></fn>
<fn fn-type="con"><p>Analyzed the data: BM. Wrote the paper: MER. Performed the computer simulations: BM. Designed the mathematical model: MER. Proved the theorems: MER.</p></fn>
</author-notes>
<pub-date pub-type="collection"><year>2013</year></pub-date>
<pub-date pub-type="epub"><day>16</day><month>9</month><year>2013</year></pub-date>
<volume>8</volume>
<issue>9</issue>
<elocation-id>e73400</elocation-id>
<history>
<date date-type="received"><day>15</day><month>2</month><year>2013</year></date>
<date date-type="accepted"><day>21</day><month>7</month><year>2013</year></date>
</history>
<permissions>
<copyright-year>2013</copyright-year>
<copyright-holder>Molnár and Ercsey-Ravasz</copyright-holder><license xlink:type="simple"><license-p>This is an open-access article distributed under the terms of the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.</license-p></license></permissions>
<abstract>
<p>There has been a long history of using neural networks for combinatorial optimization and constraint satisfaction problems. Symmetric Hopfield networks and similar approaches use steepest descent dynamics, and they always converge to the closest local minimum of the energy landscape. For finding global minima additional parameter-sensitive techniques are used, such as classical simulated annealing or the so-called chaotic simulated annealing, which induces chaotic dynamics by addition of extra terms to the energy landscape. Here we show that <italic>asymmetric</italic> continuous-time neural networks can solve constraint satisfaction problems without getting trapped in non-solution attractors. We concentrate on a model solving Boolean satisfiability (<italic>k</italic>-SAT), which is a quintessential NP-complete problem. There is a one-to-one correspondence between the stable fixed points of the neural network and the <italic>k</italic>-SAT solutions and we present numerical evidence that limit cycles may also be avoided by appropriately choosing the parameters of the model. This optimal parameter region is fairly independent of the size and hardness of instances, this way parameters can be chosen independently of the properties of problems and no tuning is required during the dynamical process. The model is similar to cellular neural networks already used in CNN computers. On an analog device solving a SAT problem would take a single operation: the connection weights are determined by the <italic>k</italic>-SAT instance and starting from any initial condition the system searches until finding a solution. In this new approach transient chaotic behavior appears as a natural consequence of optimization hardness and not as an externally induced effect.</p>
</abstract>
<funding-group><funding-statement>This research was supported by a Marie Curie International Incoming Fellowship FP7- PEOPLE-2011-IIF-299915. The funders had no role in study design, data collection and analysis, decision to publish, or preparation of the manuscript.</funding-statement></funding-group><counts><page-count count="13"/></counts></article-meta>
</front>
<body><sec id="s1">
<title>Introduction</title>
<p>The most common approach in non-conventional computation is to treat dynamical systems as algorithms. Physical and biological systems are capable of achieving their functions and reaching their optimal state with incredible speed. Computer science and information technology tries to learn from nature and especially now, when CMOS technology reaches its limits at the small scale <xref ref-type="bibr" rid="pone.0073400-Solomon1">[1]</xref> (e.g. <xref ref-type="bibr" rid="pone.0073400-The1">[2]</xref>), there is a hastened search for novel computational paradigms.</p>
<p>The use of analog dynamical systems for computation received increasing interest in the last three decades both in the theoretical and in engineering communities. Differential equations, continuous maps, and several neural network models have been employed to perform various computational tasks. In this approach, the dynamical systems are designed in a way to converge to attractors that are interpreted as the output of the computation <xref ref-type="bibr" rid="pone.0073400-Branicky1">[3]</xref>–<xref ref-type="bibr" rid="pone.0073400-BenHur1">[6]</xref>. Siegelmann, Orponen, Moore and others have recently provided a computational complexity theory for analog systems <xref ref-type="bibr" rid="pone.0073400-Moore1">[5]</xref>–<xref ref-type="bibr" rid="pone.0073400-Orponen2">[11]</xref>. A fundamental discovery also by Siegelmann was to show, that in principle, computation beyond the Turing limit is possible. She used the strongly chaotic analog shift map as an example, and proved that it has computational power beyond the Turing machine (super-Turing) <xref ref-type="bibr" rid="pone.0073400-Siegelmann2">[7]</xref>. Technology has also developed devices imitating nervous system-like processing, such as the Cellular Neural/Nonlinear Network (CNN) <xref ref-type="bibr" rid="pone.0073400-Chua1">[12]</xref>, <xref ref-type="bibr" rid="pone.0073400-Roska1">[13]</xref>, or analog VLSI devices <xref ref-type="bibr" rid="pone.0073400-Liu1">[14]</xref>, <xref ref-type="bibr" rid="pone.0073400-Douglas1">[15]</xref>. These can solve a large variety of problems in robotics, sensory computing (vision, hearing, bionic eyeglasses) etc. The CNN is an array of analog dynamical cells performing parallel continuous-time processing, effectively solving a system of coupled ordinary differential equations (ODEs) with programmable coupling parameters. Roska and Chua proved the CNN to be at least as universal as a Turing machine <xref ref-type="bibr" rid="pone.0073400-Chua2">[16]</xref>.</p>
<p>Neural network models have originally been developed and investigated with the purpose of modeling brain function, however their capability of solving optimization problems has also been explored. One of the earliest works was presented by Hopfield and Tank who used neural network models to solve the traveling salesman problem <xref ref-type="bibr" rid="pone.0073400-Hopfield1">[17]</xref>–<xref ref-type="bibr" rid="pone.0073400-Hopfield3">[19]</xref>. Despite the evidently chaotic nature of brain activity and the theoretical results showing the power of chaotic analog dynamical systems <xref ref-type="bibr" rid="pone.0073400-Siegelmann2">[7]</xref>, neural networks designed to solve combinatorial optimization problems mainly avoided chaotic dynamics, focusing on simple converging systems with Lyapunov dynamics (symmetric Hopfield networks, symmetric CNN etc.). In this approach the neural network minimizes a Lyapunov function (energy function) by converging directly to a local minimum <xref ref-type="bibr" rid="pone.0073400-Hopfield2">[18]</xref>, <xref ref-type="bibr" rid="pone.0073400-Hopfield3">[19]</xref>, and this analog process is used as a basic step of the algorithm. However, for finding the global minimum classical techniques typical in digital computing are required (such as simulated annealing etc.) <xref ref-type="bibr" rid="pone.0073400-Sima1">[8]</xref>, <xref ref-type="bibr" rid="pone.0073400-Sima2">[9]</xref>, <xref ref-type="bibr" rid="pone.0073400-ErcseyRavasz1">[20]</xref>–<xref ref-type="bibr" rid="pone.0073400-ErcseyRavasz3">[22]</xref>, and the algorithm becomes quite estranged from the original purpose of analog computing.</p>
<p>The need for more complex dynamics has been realized and some chaotic neural network models solving optimization problems were presented by Chen and Aihara <xref ref-type="bibr" rid="pone.0073400-Chen1">[23]</xref>, <xref ref-type="bibr" rid="pone.0073400-Chen2">[24]</xref>. These are also called as chaotic simulated annealing methods. In this approach usually the discrete-time symmetric Hopfield network is used and local traps are avoided by introducing a deterministic chaotic dynamics with a bifurcation parameter that is gradually decreased during the annealing process <xref ref-type="bibr" rid="pone.0073400-Chen1">[23]</xref>. This method has been further improved in different ways <xref ref-type="bibr" rid="pone.0073400-Wang1">[25]</xref>–<xref ref-type="bibr" rid="pone.0073400-Kwok1">[27]</xref>, however the need for careful tuning of parameters has not been eliminated and direct correspondence between global optimum and the final output has not been achieved.</p>
<p>In our recent papers <xref ref-type="bibr" rid="pone.0073400-ErcseyRavasz4">[28]</xref>, <xref ref-type="bibr" rid="pone.0073400-ErcseyRavasz5">[29]</xref> we have shown that optimization hardness is strongly interrelated with chaotic/turbulent dynamics, implying that designing analog dynamical systems with an output that corresponds directly to the solutions of a hard problem (global minima of the energy) will necessarily show transiently chaotic behavior. Here we show that <italic>asymmetric</italic> continuous-time neural networks can be designed to solve hard problems simply due to their structure, without requiring a step-by-step algorithm similar to those used in digital computers. In this case transient chaotic behavior appears as a natural consequence of optimization hardness and not as an artificially added tool.</p>
<p>At a recent conference <xref ref-type="bibr" rid="pone.0073400-Molnr1">[30]</xref> we presented a continuous-time asymmetric neural network (CTANN) model designed to solve Boolean satisfiability (<italic>k</italic>-SAT) (description of the model provided below). <italic>k</italic>-SAT is one of the most studied constraint satisfaction problems lying at the basis of many decision, scheduling, error-correction and bio-computational applications. Our model can be transformed to solve a large variety of constraint satisfaction problems, because <italic>k</italic>-SAT is NP-complete, meaning that every problem in NP can be transformed into this form in polynomial time (as function of the system size) <xref ref-type="bibr" rid="pone.0073400-Cook1">[31]</xref>, <xref ref-type="bibr" rid="pone.0073400-Garey1">[32]</xref>. The NP class contains the set of optimization problems whose solutions (once given) are easily checked to satisfy the constraints, however, finding those solutions in case of hardest problems takes exponentially long search-times. For details on the computational complexity of NP-complete problems see <xref ref-type="bibr" rid="pone.0073400-Garey1">[32]</xref>.</p>
<p>Here we explore in details the properties of this CTANN model. We show how we can achieve a one-to-one correspondence between the <italic>k</italic>-SAT solutions and the stable fixed points of our CTANN. Simulations on 3-SAT, 4-SAT and 5-SAT problems show that the two important parameters do not need careful tuning during the computational process. For a given <italic>k</italic> their optimal values are fairly independent of the size and other properties of the system. We even find a common area when comparing the optimal regions for different values of <italic>k</italic>. This way non-solution traps (such as limit cycles) can be avoided and after a transiently chaotic phase the system converges to a solution.</p>
</sec><sec id="s2">
<title>Results</title>
<p>This section is organized as follows. First we briefly introduce <italic>k</italic>-SAT and summarize previous analog approaches including the continuous-time dynamical system introduced in <xref ref-type="bibr" rid="pone.0073400-ErcseyRavasz4">[28]</xref>. Next we present our CTANN model discussing its key mathematical properties and finally we present numerical evidence on the effectiveness of the model.</p>
<sec id="s2a">
<title>Boolean satisfiability problems</title>
<p>In <italic>k</italic> -SAT there are given <italic>N</italic> Boolean variables, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e001" xlink:type="simple"/></inline-formula> and a propositional formula <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e002" xlink:type="simple"/></inline-formula>, which is the conjunction (AND) of <italic>M</italic> clauses (constraints) <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e003" xlink:type="simple"/></inline-formula>. Each clause is the disjunction (OR, denoted by <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e004" xlink:type="simple"/></inline-formula>) of <italic>k</italic> variables (<inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e005" xlink:type="simple"/></inline-formula>) or their negation (<inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e006" xlink:type="simple"/></inline-formula>). In 3-SAT a constraint could be for example <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e007" xlink:type="simple"/></inline-formula>. The formula may be encoded as a matrix <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e008" xlink:type="simple"/></inline-formula>:<disp-formula id="pone.0073400.e009"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pone.0073400.e009" xlink:type="simple"/><label>(1)</label></disp-formula>where <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e010" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e011" xlink:type="simple"/></inline-formula>. The goal is to find an assignment of the variables such that all clauses are satisfied (TRUE).</p>
<p>Performance of algorithms is usually tested on random <italic>k</italic>-SAT instances, where each clause includes a randomly selected set of <italic>k</italic> variables. Considering that each variable could be included in its normal or negated form, these <italic>k</italic> variables can form 2<italic><sup>k</sup></italic> possible clauses. We always randomly choose one of these. The simplest measure to characterize hardness of random <italic>k</italic>-SAT formulae is the constraint density: <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e012" xlink:type="simple"/></inline-formula>. In the easy-SAT region there are few constraints/clauses (small <italic>α</italic>) and it is easy to find solutions. For too many constraints (large <italic>α</italic>) it is easy to decide that the formula is unsatisfiable (UNSAT). There is an intermediate range (hard-SAT), however, where deciding satisfiability can be very hard: the <italic>worst-case</italic> complexity of any known algorithm for <italic>k</italic>-SAT (<inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e013" xlink:type="simple"/></inline-formula>) is exponential in <italic>N</italic> <xref ref-type="bibr" rid="pone.0073400-Cook1">[31]</xref>. Using statistical physics methods it has been shown that changing the constraint density <italic>α</italic> the solution space goes through several phase transitions. The hardness of problems is related to these different phases and the hardest instances appear just before the satisfiability threshold <xref ref-type="bibr" rid="pone.0073400-Kirkpatrick1">[33]</xref>–<xref ref-type="bibr" rid="pone.0073400-Krzakala2">[35]</xref>.</p>
</sec><sec id="s2b">
<title>Previous analog approaches</title>
<p>There have been several attempts to solve <italic>k</italic>-SAT by mapping the Boolean variables onto a continuous space. In <xref ref-type="bibr" rid="pone.0073400-Gu1">[36]</xref>, <xref ref-type="bibr" rid="pone.0073400-Gu2">[37]</xref> <italic>k</italic>-SAT is formulated as a global optimization problem in the <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e014" xlink:type="simple"/></inline-formula> continuous space, however it is solved with various local search and backtracking methods characteristic to digital computing (not continuous-time dynamical systems). Refs. <xref ref-type="bibr" rid="pone.0073400-Nagamatu1">[38]</xref>–<xref ref-type="bibr" rid="pone.0073400-Wah2">[40]</xref> use Lagrange programming neural networks for <italic>k</italic>-SAT. They define a Lagrange function using a linear combination of the individual constraints, with coefficients serving as Lagrange multipliers. The employed ODEs are similar to a Hopfield neural network, whose trajectories however, cannot guarantee that the corresponding dynamics does not get trapped by non-solution fixed points.</p>
<p>In <xref ref-type="bibr" rid="pone.0073400-ErcseyRavasz4">[28]</xref> we provided a new and exact mapping of Boolean satisfiability into a set of ODEs with a unique correspondence between its set of attractors and the <italic>k</italic>-SAT solutions. This eliminates the key weaknesses of previous attempts. The Boolean variables are mapped to the <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e015" xlink:type="simple"/></inline-formula> continuous space. <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e016" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e017" xlink:type="simple"/></inline-formula>, such that <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e018" xlink:type="simple"/></inline-formula> if the <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e019" xlink:type="simple"/></inline-formula> Boolean variable (<inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e020" xlink:type="simple"/></inline-formula>) in the SAT problem is 0 (FALSE) and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e021" xlink:type="simple"/></inline-formula> when it is 1 (TRUE). Each constraint can be formulated as a function <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e022" xlink:type="simple"/></inline-formula> which is 0 if and only if the constraint is satisfied. Accordingly an energy function can be defined as <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e023" xlink:type="simple"/></inline-formula>. Finding a solution to the SAT problem (if it exists) is equivalent to finding the global minima, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e024" xlink:type="simple"/></inline-formula>, of this function (<inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e025" xlink:type="simple"/></inline-formula>). A dynamical system defined via e.g., a simple gradient descent to find the global minimum of <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e026" xlink:type="simple"/></inline-formula>, however, will typically get trapped in local minima where <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e027" xlink:type="simple"/></inline-formula>. The continuous trajectories approach these attracting non-solution fixed-points at an exponential rate (the vector field is analytic) and hence, a corresponding exponential extraction is needed from these regions by an algorithm that does not get stuck. To achieve that, we modified the energy function by introducing auxiliary variables for each constraint (<inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e028" xlink:type="simple"/></inline-formula>, acting similar to Lagrange multipliers: <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e029" xlink:type="simple"/></inline-formula>. The dynamics of <bold>s</bold> is defined as a gradient descent on the energy surface and the role of the auxiliary variables is to provide extra dimensions along which the trajectory escapes from local wells. The dynamics ensures that whenever a constraint is not satisfied, the respective auxiliary variable grows <italic>exponentially</italic>, modifying the energy function and ultimately extracting the trajectory from the local minima/wells <xref ref-type="bibr" rid="pone.0073400-ErcseyRavasz4">[28]</xref>. Due to the unbounded auxiliary variables exhibiting exponential growth when needed, this system achieves polynomial continuous-time efficiency, however at the cost of exponentially large fluctuations in the energy function <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e030" xlink:type="simple"/></inline-formula>. This study has also shown that the hardness of (solvable) problems appears as chaotic dynamics, however, it is of transient type <xref ref-type="bibr" rid="pone.0073400-Lai1">[41]</xref>, <xref ref-type="bibr" rid="pone.0073400-Tl1">[42]</xref> as the system still finds the solution.</p>
<p>While using unbounded auxiliary variables one can avoid local traps and achieves polynomial efficiency in the analog search times, the question is whether one can design a continuous-time dynamical system for <italic>k</italic>-SAT using only bounded variables (implementation friendly), but preserving as many of the desirable features of the system as possible. At a recent conference <xref ref-type="bibr" rid="pone.0073400-Molnr1">[30]</xref> we presented an implementation friendly model for solving <italic>k</italic>-SAT (see below), which is a cellular neural network model similar to those used in CNN computers and also similar to Hopfield models. Here we rigorously define the parameter region where a one-to-one correspondence between solutions and fixed-points can be achieved. We also show that the optimal region of parameters (where the system is most efficient) is independent of the properties of the problem. Most importantly, our system does not get trapped in local minima, finding the solution is one single continuous-time process which does not need “intervention” and tuning of parameters.</p>
</sec><sec id="s2c">
<title>Continuous-time asymmetric neural network for k-SAT</title>
<p>Continuous-time recurrent neural networks in general are defined as:<disp-formula id="pone.0073400.e031"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pone.0073400.e031" xlink:type="simple"/><label>(2)</label></disp-formula>where <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e032" xlink:type="simple"/></inline-formula> is the state value, or activation potential of the cell, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e033" xlink:type="simple"/></inline-formula> is the output function of the neuron (usually a sigmoid), <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e034" xlink:type="simple"/></inline-formula> is the input, or bias of the neuron and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e035" xlink:type="simple"/></inline-formula> are connection weights. Cellular neural networks have the same form, however in real implementations the cells are placed on a square lattice, and so far only neighbors can influence each other.</p>
<p>We defined our continuous-time asymmetric neural network model on a bipartite graph with two types of nodes (cells) (<xref ref-type="fig" rid="pone-0073400-g001">Fig. 1A</xref>) <xref ref-type="bibr" rid="pone.0073400-Molnr1">[30]</xref>. One type (“<italic>s</italic>-type”) represents the variables of <italic>k</italic>-SAT, whose state value will be denoted by <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e036" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e037" xlink:type="simple"/></inline-formula> and their output function defined via (see <xref ref-type="fig" rid="pone-0073400-g001">Fig. 1B</xref>):<disp-formula id="pone.0073400.e038"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pone.0073400.e038" xlink:type="simple"/><label>(3)</label></disp-formula>When the Boolean variable is true (<inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e039" xlink:type="simple"/></inline-formula>) we will have <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e040" xlink:type="simple"/></inline-formula>, when it is false (<inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e041" xlink:type="simple"/></inline-formula>) then <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e042" xlink:type="simple"/></inline-formula>. However, during the dynamics we allow any continuous value <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e043" xlink:type="simple"/></inline-formula>. For simplicity we say that <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e044" xlink:type="simple"/></inline-formula> is a solution of <italic>k</italic>-SAT, whenever <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e045" xlink:type="simple"/></inline-formula> is a solution. The input of these cells will not be needed, we fix them as <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e046" xlink:type="simple"/></inline-formula> <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e047" xlink:type="simple"/></inline-formula>. The self-coupling parameter will be a constant value <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e048" xlink:type="simple"/></inline-formula>, this being one of the important parameters of the model.</p>
<fig id="pone-0073400-g001" position="float"><object-id pub-id-type="doi">10.1371/journal.pone.0073400.g001</object-id><label>Figure 1</label><caption>
<title>Structure of the neural network.</title>
<p>(A) The system is defined on a bipartite graph with two types of nodes. (B) The output function of <italic>s</italic>-type variables <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e049" xlink:type="simple"/></inline-formula>. (C) Output of <italic>a</italic>-type variables <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e050" xlink:type="simple"/></inline-formula>.</p>
</caption><graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pone.0073400.g001" position="float" xlink:type="simple"/></fig>
<p>The clauses are represented by the second type of cells with state value <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e051" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e052" xlink:type="simple"/></inline-formula> and output function (<xref ref-type="fig" rid="pone-0073400-g001">Fig. 1C</xref>):<disp-formula id="pone.0073400.e053"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pone.0073400.e053" xlink:type="simple"/><label>(4)</label></disp-formula>These variables, or “<italic>a</italic>-type” cells will play a similar role as the auxiliary variables in <xref ref-type="bibr" rid="pone.0073400-ErcseyRavasz4">[28]</xref>, <xref ref-type="bibr" rid="pone.0073400-ErcseyRavasz5">[29]</xref>. They determine the impact a clause has at a given moment on the dynamics of the <bold><italic>s</italic></bold> variables. For this reason <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e054" xlink:type="simple"/></inline-formula> will correspond to the clause being true, and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e055" xlink:type="simple"/></inline-formula> to the clause being false. The second important parameter of the model is the self-coupling of these cells <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e056" xlink:type="simple"/></inline-formula>. Their input will be <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e057" xlink:type="simple"/></inline-formula> where <italic>k</italic> represents the number of variables in the clause (<inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e058" xlink:type="simple"/></inline-formula> for 3-SAT, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e059" xlink:type="simple"/></inline-formula> for 4-SAT, etc.). As we will see later, this is needed in order to achieve the correspondence between <italic>k</italic>-SAT solutions and stable fixed points. The connection weights between the cells are determined by the <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e060" xlink:type="simple"/></inline-formula> matrix elements of the given <italic>k</italic>-SAT problem. The dynamical system is defined via:<disp-formula id="pone.0073400.e061"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pone.0073400.e061" xlink:type="simple"/><label>(5)</label></disp-formula><disp-formula id="pone.0073400.e062"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pone.0073400.e062" xlink:type="simple"/><label>(6)</label></disp-formula>This neural network is asymmetrical: the influence of a clause on a variable (with connection weight <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e063" xlink:type="simple"/></inline-formula>) is exactly the opposite of the influence of the variable on the same clause (with weight <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e064" xlink:type="simple"/></inline-formula>). We cannot assign a Lyapunov function (or energy function) to this system, the dynamics is not a simple gradient descent, and in case of hard problems it can show complex chaotic dynamics.</p>
</sec><sec id="s2d">
<title>Important theorems</title>
<p>Here we list some important theorems showing the properties of the model. The proofs are presented at the end of the paper (in section <xref ref-type="sec" rid="s4">Proof of Theorems</xref>).</p>
<p><italic>Theorem 1</italic></p>
<p><italic>Variables remain bounded: If initially </italic><inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e065" xlink:type="simple"/></inline-formula><italic> and </italic><inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e066" xlink:type="simple"/></inline-formula><italic>, </italic><italic>then the state values of cells </italic><inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e067" xlink:type="simple"/></inline-formula><italic> and </italic><inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e068" xlink:type="simple"/></inline-formula><italic> remain bounded for all </italic><inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e069" xlink:type="simple"/></inline-formula><italic>, </italic><inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e070" xlink:type="simple"/></inline-formula><italic>:</italic><disp-formula id="pone.0073400.e071"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pone.0073400.e071" xlink:type="simple"/><label>(7)</label></disp-formula><disp-formula id="pone.0073400.e072"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pone.0073400.e072" xlink:type="simple"/><label>(8)</label></disp-formula></p>
<p><italic>Theorem 2</italic></p>
<p><italic>Every k-SAT solution has a corresponding stable fixed point: Given a k-SAT formula </italic><inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e073" xlink:type="simple"/></inline-formula><italic>, if </italic><inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e074" xlink:type="simple"/></inline-formula><italic>, </italic><inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e075" xlink:type="simple"/></inline-formula><italic> is a solution of </italic><inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e076" xlink:type="simple"/></inline-formula><italic> and </italic><inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e077" xlink:type="simple"/></inline-formula><italic>, </italic><inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e078" xlink:type="simple"/></inline-formula><italic> then the </italic><inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e079" xlink:type="simple"/></inline-formula><italic> point:</italic><disp-formula id="pone.0073400.e080"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pone.0073400.e080" xlink:type="simple"/><label>(9)</label></disp-formula><inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e081" xlink:type="simple"/></inline-formula><italic>, </italic><inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e082" xlink:type="simple"/></inline-formula><italic> is a stable fixed point of the system (5–6)</italic>.</p>
<p><italic>Theorem 3</italic></p>
<p><italic>A stable fixed point always corresponds to a solution. If </italic><inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e083" xlink:type="simple"/></inline-formula><italic>, </italic><inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e084" xlink:type="simple"/></inline-formula><italic> and </italic><inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e085" xlink:type="simple"/></inline-formula><italic> is a stable fixed point, then </italic><inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e086" xlink:type="simple"/></inline-formula><italic> must be a solution of the k-SAT formula. (</italic><inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e087" xlink:type="simple"/></inline-formula><italic> denotes the integer part.)</italic></p>
<p>When proving this third theorem it was relatively easy to see that it holds for <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e088" xlink:type="simple"/></inline-formula> <xref ref-type="bibr" rid="pone.0073400-Molnr1">[30]</xref>. Simulation results, however, indicate that the optimal value of parameter <italic>B</italic> is larger than 2. Indeed, here we present a more general proof showing that the correspondence between stable fixed points and solutions is preserved in the larger interval <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e089" xlink:type="simple"/></inline-formula> (see <xref ref-type="sec" rid="s4">Proof of Theorems</xref>).</p>
</sec><sec id="s2e">
<title>Numerical results</title>
<p>The theorems presented above guarantee that all stable fixed points of the system correspond to <italic>k</italic>-SAT solutions. However, there is no guarantee that there are no other attractors - such as limit cycles or chaotic attractors - in the system. The existence or non-existence of such attractors is very difficult to show analytically, but simulation results indicate that parameters (<italic>A</italic>,<italic>B</italic>) have an optimal region fairly independent of the properties of the problems, where the dynamics avoids getting trapped in non-solution attractors and finds a <italic>k</italic>-SAT solution.</p>
<p>We performed the simulations using the fifth-order adaptive Runge-Kutta method. In <xref ref-type="fig" rid="pone-0073400-g002">Figure 2</xref> we plot the time evolution of a few <italic>s</italic>-type and <italic>a</italic>-type variables and the energy function <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e090" xlink:type="simple"/></inline-formula> mentioned above (for details see <xref ref-type="bibr" rid="pone.0073400-ErcseyRavasz4">[28]</xref>) for a large 3-SAT problem with <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e091" xlink:type="simple"/></inline-formula> variables and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e092" xlink:type="simple"/></inline-formula> constraint density. While our neural network does not explicitly use an energy function (like Hopfield networks do), we use this function to monitor the evolution of the trajectory in its search for a solution. This strongly depends on the parameters (<italic>A</italic>,<italic>B</italic>). In <xref ref-type="fig" rid="pone-0073400-g002">Figs. 2A, B, C</xref> we show a case when there is transient chaotic dynamics, but finally a solution is found (<inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e093" xlink:type="simple"/></inline-formula>). In spite of the fluctuations the energy consistently decreases until finding the solution where <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e094" xlink:type="simple"/></inline-formula>. There are parameter values <italic>A</italic> and <italic>B</italic>, however, where the dynamics gets trapped in limit cycles, with an example shown in <xref ref-type="fig" rid="pone-0073400-g002">Figs. 2D, E, F</xref> (<inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e095" xlink:type="simple"/></inline-formula>). In such cases some of the <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e096" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e097" xlink:type="simple"/></inline-formula> variables remain constant but others follow complicated periodic orbits. The energy is very noisy in the simulation, but we can see it gets trapped and fluctuates in a narrow interval. This usually happens when the <italic>A</italic> and <italic>B</italic> values are small (see also below). In these situations the dynamics gets out very slowly from the subspace <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e098" xlink:type="simple"/></inline-formula>, inside which the dynamics is linear and limit cycles can easily occur. These are not necessarily stable limit cycles, it can happen that the dynamics escapes after a very long time. Similar phenomenon of extremely long transient oscillations have been observed in CNN systems with a particular ring shape <xref ref-type="bibr" rid="pone.0073400-Forti1">[43]</xref>.</p>
<fig id="pone-0073400-g002" position="float"><object-id pub-id-type="doi">10.1371/journal.pone.0073400.g002</object-id><label>Figure 2</label><caption>
<title>Time evolution of <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e099" xlink:type="simple"/></inline-formula>-type and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e100" xlink:type="simple"/></inline-formula>-type variables.</title>
<p>In a given 3-SAT instance with <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e101" xlink:type="simple"/></inline-formula> the evolution of three different <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e102" xlink:type="simple"/></inline-formula> variables (different colors on (A), (D)), two different <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e103" xlink:type="simple"/></inline-formula> variables (B), (E) and the energy of the system (C), (F) is shown for two different parameter settings. (A), (B), (C) A = 1.54, B = 2.18 the solution is found after a chaotic transient. (C), (D), (E) A = 1.1, B = 1.1 the dynamics gets trapped in a limit cycle.</p>
</caption><graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pone.0073400.g002" position="float" xlink:type="simple"/></fig>
<p>We needed to investigate how the efficiency of the system in finding solutions depends on the (<italic>A</italic>,<italic>B</italic>) parameters. As mentioned above the standard way of testing algorithmic performance is to use random SAT instances. In <xref ref-type="fig" rid="pone-0073400-g003">Figs. 3</xref>, <xref ref-type="fig" rid="pone-0073400-g004">4</xref> we show maps covering the <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e104" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e105" xlink:type="simple"/></inline-formula> parameter region, depicting the performance of the system and how it changes as the system size varies. We ran 100 random 3-SAT (<xref ref-type="fig" rid="pone-0073400-g003">Fig. 3</xref>) and 4-SAT problems (<xref ref-type="fig" rid="pone-0073400-g004">Fig. 4</xref>) for each point of the maps (out of the randomly generated instances we use only the satisfiable ones). The resolution of the maps is 0.02. This means that preparing these maps is equivalent to solving <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e106" xlink:type="simple"/></inline-formula> instances for each <italic>N</italic>. Because these are computationally costly, we had to use relatively small instances. Constraint densities from the hardest regions of 3-SAT (<inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e107" xlink:type="simple"/></inline-formula>) and 4-SAT (<inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e108" xlink:type="simple"/></inline-formula>) were used <xref ref-type="bibr" rid="pone.0073400-Kirkpatrick1">[33]</xref>–<xref ref-type="bibr" rid="pone.0073400-Krzakala2">[35]</xref>. In the first column of <xref ref-type="fig" rid="pone-0073400-g003">Figs. 3</xref>, <xref ref-type="fig" rid="pone-0073400-g004">4</xref> the color indicates the fraction of solved problems in the given time <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e109" xlink:type="simple"/></inline-formula>. In the second column we show the average continuous-time (not the simulation running time) the system takes to solve them (see color bars). When the solution is not found we include <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e110" xlink:type="simple"/></inline-formula> in the average. The maps show a peculiar shape consistent while changing the system size. The bottom left corner and the top middle is a parameter region where solutions are hard to find. Our observations also indicate that this is caused by limit cycles in the bottom left corner, and extremely long chaotic transients (super-transients) at the top of the map. In the middle, however there is a large region where the solution is found efficiently. As the system size increases this middle region gets lighter in the first (red) column and darker in the second one (blue). This is because the time needed to solve problems increases with the system size. In order to solve the same fraction of problems (to achieve the same red shade on the map) we would need to greatly increase the simulation times for the larger systems (see also <xref ref-type="fig" rid="pone-0073400-g007">Fig. 7</xref>), which is too costly in our case. The statistics being based on only 100 random instances, instead of searching for the optimal (<italic>A</italic>,<italic>B</italic>) parameter setting we indicate the 4% of the whole map (orange squares) where the fraction of solved problems is the largest (when the fractions are identical comparisons are made based on time values). This optimal region is fairly consistent while changing the size of problems (also see <xref ref-type="fig" rid="pone-0073400-g006">Fig. 6A, B</xref>).</p>
<fig id="pone-0073400-g003" position="float"><object-id pub-id-type="doi">10.1371/journal.pone.0073400.g003</object-id><label>Figure 3</label><caption>
<title>Parameter dependence of dynamics in 3-SAT problems with critical constraint density.</title>
<p>For each point <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e111" xlink:type="simple"/></inline-formula> on the map we solve 100 randomly chosen satisfiable 3-SAT instances, with <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e112" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e113" xlink:type="simple"/></inline-formula>. Maps in the first column show the fraction of solved problems, in the second column the average continuos-time needed (see color bars). The maximal time <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e114" xlink:type="simple"/></inline-formula> for <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e115" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e116" xlink:type="simple"/></inline-formula> for <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e117" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e118" xlink:type="simple"/></inline-formula> for <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e119" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e120" xlink:type="simple"/></inline-formula> for <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e121" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e122" xlink:type="simple"/></inline-formula> for <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e123" xlink:type="simple"/></inline-formula>. Orange squares on the red maps indicate 4% of the map with highest efficiency.</p>
</caption><graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pone.0073400.g003" position="float" xlink:type="simple"/></fig>
<fig id="pone-0073400-g004" position="float"><object-id pub-id-type="doi">10.1371/journal.pone.0073400.g004</object-id><label>Figure 4</label><caption>
<title>Parameter dependence of dynamics in 4-SAT problems with critical constraint density.</title>

<p>For each point <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e124" xlink:type="simple"/></inline-formula> on the map we solve 100 randomly chosen satisfiable 4-SAT instances, with <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e125" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e126" xlink:type="simple"/></inline-formula>. Maps in the first column show the fraction of solved problems, in the second column the average continuos-time needed (see color bars). The maximal time <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e127" xlink:type="simple"/></inline-formula> for <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e128" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e129" xlink:type="simple"/></inline-formula> for <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e130" xlink:type="simple"/></inline-formula>. Orange squares on the red maps indicate 4% area of the map with highest efficiency.</p>
</caption><graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pone.0073400.g004" position="float" xlink:type="simple"/></fig>
<fig id="pone-0073400-g005" position="float"><object-id pub-id-type="doi">10.1371/journal.pone.0073400.g005</object-id><label>Figure 5</label><caption>
<title>Parameter dependence of dynamics in 3-SAT, 4-SAT and 5-SAT problems with fixed size and varying constraint density.</title>
<p>For each (<italic>A</italic>,<italic>B</italic>) on the map we solve 100 randomly chosen satisfiable instances. The color indicates the fraction of solved problems (see color bar). Simulations were performed on 3-SAT problems (first row) with <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e139" xlink:type="simple"/></inline-formula> and constraint densities <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e140" xlink:type="simple"/></inline-formula> (left to right), 4-SAT (second row) with <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e141" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e142" xlink:type="simple"/></inline-formula>, and 5-SAT (third row) with <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e143" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e144" xlink:type="simple"/></inline-formula>. The optimal parameter regions are shown with orange squares on the color maps. In the last column we compare the optimal regions of the three maps in each particular row (black, red, green from left to right), by drawing the frames of these regions.</p>
</caption><graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pone.0073400.g005" position="float" xlink:type="simple"/></fig>
<fig id="pone-0073400-g006" position="float"><object-id pub-id-type="doi">10.1371/journal.pone.0073400.g006</object-id><label>Figure 6</label><caption>

<title>Consistency of the optimal parameter region.</title>
<p>The optimal (<italic>A</italic>,<italic>B</italic>) parameter regions are shown with different colors for all maps obtained for A) 3-SAT, B) 4-SAT, C) 5-SAT instances. D) We compare the maps for different <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e147" xlink:type="simple"/></inline-formula> by choosing <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e148" xlink:type="simple"/></inline-formula> and the hard-SAT phase for each <italic>k</italic>: <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e149" xlink:type="simple"/></inline-formula> in 3-SAT (black), <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e150" xlink:type="simple"/></inline-formula> in 4-SAT (red) and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e151" xlink:type="simple"/></inline-formula> in 5-SAT (green).</p>
</caption><graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pone.0073400.g006" position="float" xlink:type="simple"/></fig><fig id="pone-0073400-g007" position="float"><object-id pub-id-type="doi">10.1371/journal.pone.0073400.g007</object-id><label>Figure 7</label><caption>
<title>Distribution of transient times.</title>
<p>The number of <italic>k</italic>-SAT problems <italic>p</italic>(<italic>t</italic>) which remain unsolved as function of the continuous-time <italic>t</italic> of the system, for A) <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e160" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e161" xlink:type="simple"/></inline-formula>, B) <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e162" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e163" xlink:type="simple"/></inline-formula> C) <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e164" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e165" xlink:type="simple"/></inline-formula> for different values of <italic>N</italic> (see the legends). The statistics was made on 10<sup>4</sup> problems for each <italic>k</italic> and <italic>N</italic>. The last part of the distributions are fitted with a power law <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e166" xlink:type="simple"/></inline-formula>, and D) shows the dependence of the exponent <italic>β</italic> on <italic>N</italic>. For <italic>k</italic> = 3 this can be fitted with a power law <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e167" xlink:type="simple"/></inline-formula>. For 4-SAT and 5-SAT the <italic>β</italic> values for larger <italic>N</italic> are not precise (statistics would be needed on much longer time interval), but the exponents are expected to be around −1.76 and −2.23.</p>
</caption><graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pone.0073400.g007" position="float" xlink:type="simple"/></fig>
<p>We also checked how the map and the optimal parameter region changes as varying the constraint density <italic>α</italic>, and by this the hardness of problems. In the first row of <xref ref-type="fig" rid="pone-0073400-g005">Fig. 5</xref> we show the maps for 3-SAT problems with <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e131" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e132" xlink:type="simple"/></inline-formula> (from left to right). In the last column the frames of the optimal regions of the three maps are placed on each other showing an excellent match. Maps in the second row show results obtained on 4-SAT problems with <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e133" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e134" xlink:type="simple"/></inline-formula> and in the third row on 5-SAT problems with <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e135" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e136" xlink:type="simple"/></inline-formula> (the hardest region in 5-SAT being around <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e137" xlink:type="simple"/></inline-formula> <xref ref-type="bibr" rid="pone.0073400-Krzakala1">[34]</xref>). Again the optimal areas show a good match. Because for larger <italic>k</italic> the <italic>B</italic> parameter can have larger values (see Theorem 3), for 5-SAT we show the maps on the <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e138" xlink:type="simple"/></inline-formula> interval. However, we see that the optimal region still remains at the lower values close to the optimal parameter range of 3-SAT and 4-SAT.</p>
<p>These maps indicate that the optimal parameter region is surprisingly consistent while changing the size (<italic>N</italic>) and hardness (<italic>α</italic>) of problems. On <xref ref-type="fig" rid="pone-0073400-g006">Fig. 6A, B, C</xref> we draw on top of each other the frames of these optimal areas found on maps of all simulations performed on 3-SAT, 4-SAT and 5-SAT problems, respectively. On <xref ref-type="fig" rid="pone-0073400-g006">Fig. 6D</xref> we compare 3-SAT (black frame), 4-SAT (red) and 5-SAT (green) by showing the optimal regions in case of <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e145" xlink:type="simple"/></inline-formula> and constraint densities <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e146" xlink:type="simple"/></inline-formula> these being the hardest SAT phases for each. This indicates that there is a smaller region (in the middle) which seems to be part of the optimal regions of all <italic>k</italic>.</p>
<p>Because the variables remain bounded and there is no extra energy introduced into the system (contrary to the system in <xref ref-type="bibr" rid="pone.0073400-ErcseyRavasz4">[28]</xref>) the dynamics naturally has an exponential continuous-time complexity in the hard-SAT region. In <xref ref-type="fig" rid="pone-0073400-g007">Fig. 7A, B, C</xref> we plot the fraction <italic>p</italic>(<italic>t</italic>) of problems which remain unsolved after a time <italic>t</italic> for various sizes (<inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e152" xlink:type="simple"/></inline-formula>) of randomly chosen 3-SAT, 4-SAT and 5-SAT instances with constraint densities in the hardest <italic>α</italic> regions. We chose a parameter setting (<inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e153" xlink:type="simple"/></inline-formula>) from the common part of the optimal regions shown in <xref ref-type="fig" rid="pone-0073400-g006">Fig. 6D</xref>. The distributions are decreasing as a power law (<inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e154" xlink:type="simple"/></inline-formula>), where the power <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e155" xlink:type="simple"/></inline-formula> depends on <italic>k</italic> and the size <italic>N</italic> of the <italic>k</italic>-SAT instances. <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e156" xlink:type="simple"/></inline-formula> is again a power law, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e157" xlink:type="simple"/></inline-formula> (<inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e158" xlink:type="simple"/></inline-formula> for <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e159" xlink:type="simple"/></inline-formula>) indicating that the time complexity of the model is exponential for solving a fixed fraction of problems (<xref ref-type="fig" rid="pone-0073400-g007">Fig. 7D</xref>). This power-law decrease of <italic>p</italic>(<italic>t</italic>) shows that the probability of not finding the solution goes to zero (not a positive constant), supporting the claim that in this optimal parameter region (common for all <italic>k</italic>) the dynamics does not get trapped in limit cycles and a solution is always found after a transiently chaotic period.</p>
</sec></sec><sec id="s3">
<title>Discussion</title>
<p>Solving NP-complete problems is a key test for any non-conventional computation. Here we presented an asymmetric continuous-time neural network that can efficiently solve Boolean satisfiability without getting trapped in non-solution attractors, and without requiring careful parameter tuning during the dynamical process. In particular, it has the following key properties: 1) It has a deterministic continuous-time dynamics. 2) All variables remain bounded. 3) The dynamics can be implemented with analog circuits (has almost the same form as used in CNN computers). 4) There is a one-to-one correspondence between the stable fixed-points of the system and the solutions of the <italic>k</italic>-SAT problem.</p>
<p>Numerical simulations show that our method works consistently and efficiently on 3-SAT, 4-SAT and 5-SAT problems. A careful study of the dynamics as function of the two important parameters of the system shows that their optimal interval has a peculiar shape surprisingly consistent when changing the size and hardness of SAT instances. Comparing the optimal parameter regions for the different <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e168" xlink:type="simple"/></inline-formula> SAT classes we find a common parameter range which seems to work efficiently for each <italic>k</italic>-SAT instance. This assures that the system does not need careful choosing of parameters depending on the properties of SAT formulae.</p>
<p>While there are parameter intervals where limit cycles frequently occur (mainly the smaller values of <italic>A</italic> and <italic>B</italic>), statistics done with a parameter setting (the same for all <italic>k</italic>) chosen from the optimal region shows that here the dynamics does not get trapped in long cycles. The distribution of transient times shows a clear power-law decay in contrast with the distributions obtained with non-optimal parameters (not shown on the figures), where it goes to a positive constant value indicating that a part of problems are not solved because the dynamics gets trapped in long oscillations.</p>
<p>Previous approaches mainly concentrated on symmetric - and dominantly on discrete-time - neural networks. Most of the time gradient descent dynamics was used possibly combined with annealing processes. Here we have shown that <italic>asymmetric continuous-time</italic> neural networks can be designed to solve constraint satisfaction problems on their own, without additional annealing processes. This dynamics does not get trapped in non-solution attractors and transient chaotic behavior appears as an unavoidable byproduct of optimization hardness <xref ref-type="bibr" rid="pone.0073400-ErcseyRavasz4">[28]</xref>, <xref ref-type="bibr" rid="pone.0073400-ErcseyRavasz5">[29]</xref>.</p>
<p>On an analog device this algorithm would take a single operation: the connection weights are based on the <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e169" xlink:type="simple"/></inline-formula> matrix corresponding to the given <italic>k</italic>-SAT instance (the input of the operation) and starting from any initial condition the system searches until finding a solution, without the need of any further intervention by the user.</p>
<p>Our model is implementation friendly, being similar to neural networks used in analog CNN computers. However, when considering analog computation, an important question - which needs to be investigated - is the effect of noise on the dynamics. Preliminary studies show that similarly to other transiently chaotic systems <xref ref-type="bibr" rid="pone.0073400-Lai1">[41]</xref>, <xref ref-type="bibr" rid="pone.0073400-Tl1">[42]</xref>, the <italic>p</italic>(<italic>t</italic>) distribution of transient times (and thus the efficiency of finding the solution) is not sensitive to noise. Actually noise effects may even help avoiding long transient oscillations, thus extending the optimal parameter region.</p>
</sec><sec id="s4">
<title>Proof of Theorems</title>
<sec id="s4a">
<title>Proof of Theorem 1</title>
<p>Let us recall the dynamics of <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e170" xlink:type="simple"/></inline-formula>:<disp-formula id="pone.0073400.e171"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pone.0073400.e171" xlink:type="simple"/><label>(10)</label></disp-formula>This is a first-order ODE and its solution can be written as:<disp-formula id="pone.0073400.e172"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pone.0073400.e172" xlink:type="simple"/><label>(11)</label></disp-formula>It follows that<disp-formula id="pone.0073400.e173"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pone.0073400.e173" xlink:type="simple"/><label>(12)</label></disp-formula><disp-formula id="pone.0073400.e174"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pone.0073400.e174" xlink:type="simple"/><label>(13)</label></disp-formula><disp-formula id="pone.0073400.e175"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pone.0073400.e175" xlink:type="simple"/><label>(14)</label></disp-formula><disp-formula id="pone.0073400.e176"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pone.0073400.e176" xlink:type="simple"/><label>(15)</label></disp-formula><disp-formula id="pone.0073400.e177"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pone.0073400.e177" xlink:type="simple"/><label>(16)</label></disp-formula><disp-formula id="pone.0073400.e178"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pone.0073400.e178" xlink:type="simple"/><label>(17)</label></disp-formula>where we used the facts that <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e179" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e180" xlink:type="simple"/></inline-formula> and the initial condition <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e181" xlink:type="simple"/></inline-formula>. It is also easy to see that <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e182" xlink:type="simple"/></inline-formula>.</p>
<p>For proving <xref ref-type="disp-formula" rid="pone.0073400.e072">Eq. (8)</xref> we recall the dynamical equation:<disp-formula id="pone.0073400.e183"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pone.0073400.e183" xlink:type="simple"/><label>(18)</label></disp-formula>which has the solution:<disp-formula id="pone.0073400.e184"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pone.0073400.e184" xlink:type="simple"/><label>(19)</label></disp-formula>First we will prove the rhs of <xref ref-type="disp-formula" rid="pone.0073400.e072">Eq. (8)</xref>.<disp-formula id="pone.0073400.e185"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pone.0073400.e185" xlink:type="simple"/><label>(20)</label></disp-formula><disp-formula id="pone.0073400.e186"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pone.0073400.e186" xlink:type="simple"/><label>(21)</label></disp-formula>Because there are exactly <italic>k</italic> variables in a clause and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e187" xlink:type="simple"/></inline-formula>, then <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e188" xlink:type="simple"/></inline-formula>. Recall also that <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e189" xlink:type="simple"/></inline-formula>, and the initial condition <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e190" xlink:type="simple"/></inline-formula>. Using this we can write:<disp-formula id="pone.0073400.e191"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pone.0073400.e191" xlink:type="simple"/><label>(22)</label></disp-formula></p>
<p>For proving the lhs of <xref ref-type="disp-formula" rid="pone.0073400.e072">Eq. (8)</xref> we will use that <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e192" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e193" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e194" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e195" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e196" xlink:type="simple"/></inline-formula>:<disp-formula id="pone.0073400.e197"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pone.0073400.e197" xlink:type="simple"/><label>(23)</label></disp-formula></p>
</sec><sec id="s4b">
<title>Proof of Theorem 2</title>
<p>We presented this proof in the conference paper <xref ref-type="bibr" rid="pone.0073400-Molnr1">[30]</xref>, however we briefly recall it here to make it easier to readers to follow the next proof.</p>
<p>Given the definitions, it follows that if <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e198" xlink:type="simple"/></inline-formula> satisfies the clause <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e199" xlink:type="simple"/></inline-formula> then <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e200" xlink:type="simple"/></inline-formula> and if it does not satisfy it, when <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e201" xlink:type="simple"/></inline-formula>, then <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e202" xlink:type="simple"/></inline-formula>. Accordingly, the sum <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e203" xlink:type="simple"/></inline-formula> in <xref ref-type="disp-formula" rid="pone.0073400.e080">Eq. (9)</xref> can take <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e204" xlink:type="simple"/></inline-formula> possible values: <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e205" xlink:type="simple"/></inline-formula>. Only the value of −<italic>k</italic> corresponds to the clause <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e206" xlink:type="simple"/></inline-formula> not being satisfied, in all other cases there is at least one variable satisfying the constraint. Because by assumption <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e207" xlink:type="simple"/></inline-formula> is a solution, we must have:<disp-formula id="pone.0073400.e208"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pone.0073400.e208" xlink:type="simple"/><label>(24)</label></disp-formula>Using <xref ref-type="disp-formula" rid="pone.0073400.e080">Eqs. (9</xref>, <xref ref-type="disp-formula" rid="pone.0073400.e208">24)</xref> and including the values of <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e209" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e210" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e211" xlink:type="simple"/></inline-formula> into the dynamical <xref ref-type="disp-formula" rid="pone.0073400.e061">equations (5)</xref> and <xref ref-type="disp-formula" rid="pone.0073400.e062">(6)</xref> we get <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e212" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e213" xlink:type="simple"/></inline-formula>, confirming that we have a fixed point.</p>
<p>To prove stability, we will show the following: Starting in any point <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e214" xlink:type="simple"/></inline-formula> in a compact vicinity of the fixed point, such that <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e215" xlink:type="simple"/></inline-formula> <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e216" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e217" xlink:type="simple"/></inline-formula> <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e218" xlink:type="simple"/></inline-formula>, the square distance from the fixed point:<disp-formula id="pone.0073400.e219"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pone.0073400.e219" xlink:type="simple"/><label>(25)</label></disp-formula>is decreasing, that is <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e220" xlink:type="simple"/></inline-formula>, until the dynamics reaches the fixed point where <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e221" xlink:type="simple"/></inline-formula>.</p>
<p>From <xref ref-type="disp-formula" rid="pone.0073400.e080">Eq. (9)</xref> we know that <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e222" xlink:type="simple"/></inline-formula>. We have two cases: 1) If <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e223" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e224" xlink:type="simple"/></inline-formula> then <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e225" xlink:type="simple"/></inline-formula>. 2) If <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e226" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e227" xlink:type="simple"/></inline-formula> then <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e228" xlink:type="simple"/></inline-formula>. In both cases <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e229" xlink:type="simple"/></inline-formula>.</p>
<p>Similarly from <xref ref-type="disp-formula" rid="pone.0073400.e208">Eq. (24)</xref> <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e230" xlink:type="simple"/></inline-formula> and condition <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e231" xlink:type="simple"/></inline-formula> it follows that <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e232" xlink:type="simple"/></inline-formula>.</p>
<p>Inserting these in <xref ref-type="disp-formula" rid="pone.0073400.e061">Eqs. (5</xref>, <xref ref-type="disp-formula" rid="pone.0073400.e062">6)</xref> and using <xref ref-type="disp-formula" rid="pone.0073400.e080">Eq. (9)</xref> it can be easily seen that <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e233" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e234" xlink:type="simple"/></inline-formula> and the derivative of the distance is:<disp-formula id="pone.0073400.e235"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pone.0073400.e235" xlink:type="simple"/><label>(26)</label></disp-formula>Because the distance from the fixed point cannot increase along any of the axes: <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e236" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e237" xlink:type="simple"/></inline-formula>, the conditions set for <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e238" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e239" xlink:type="simple"/></inline-formula> remain valid for all <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e240" xlink:type="simple"/></inline-formula> and the distance continues to decrease until the dynamics reaches the fixed point where (and only there) <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e241" xlink:type="simple"/></inline-formula>.</p>
</sec><sec id="s4c">
<title>Proof of Theorem 3</title>
<p>It is easy to see that similarly to CNN models our system has the following property (the proof for CNN can be found in <xref ref-type="bibr" rid="pone.0073400-Chua1">[12]</xref>): if <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e242" xlink:type="simple"/></inline-formula> then in a stable fixed point <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e243" xlink:type="simple"/></inline-formula> (<inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e244" xlink:type="simple"/></inline-formula>) <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e245" xlink:type="simple"/></inline-formula>; if <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e246" xlink:type="simple"/></inline-formula> then <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e247" xlink:type="simple"/></inline-formula> or <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e248" xlink:type="simple"/></inline-formula> (<inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e249" xlink:type="simple"/></inline-formula>) <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e250" xlink:type="simple"/></inline-formula>. (If these conditions do not hold, there is always an unstable direction along which the dynamics can escape from the fixed point, see <xref ref-type="bibr" rid="pone.0073400-Chua1">[12]</xref>.)</p>
<p>Being in a stable fixed point <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e251" xlink:type="simple"/></inline-formula>:<disp-formula id="pone.0073400.e252"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pone.0073400.e252" xlink:type="simple"/><label>(27)</label></disp-formula></p>
<p>Multiplying <xref ref-type="disp-formula" rid="pone.0073400.e252">Eq. (27)</xref> with <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e253" xlink:type="simple"/></inline-formula> we get:<disp-formula id="pone.0073400.e254"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pone.0073400.e254" xlink:type="simple"/><label>(28)</label></disp-formula>where we used <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e255" xlink:type="simple"/></inline-formula> and introduced the notation <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e256" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e257" xlink:type="simple"/></inline-formula> for the two parts of the sum, the first (second) part includes the clauses which are satisfied (not satisfied) by variable <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e258" xlink:type="simple"/></inline-formula>.</p>
<p>As discussed in the previous theorem, for an unsatisfied clause <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e259" xlink:type="simple"/></inline-formula> the sum <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e260" xlink:type="simple"/></inline-formula>. Inserting this into the dynamical <xref ref-type="disp-formula" rid="pone.0073400.e062">equation (6)</xref> if in the fixed point we have an unsatisfied clause <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e261" xlink:type="simple"/></inline-formula>, then:<disp-formula id="pone.0073400.e262"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pone.0073400.e262" xlink:type="simple"/><label>(29)</label></disp-formula>Because <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e263" xlink:type="simple"/></inline-formula> must be 0 or 1 and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e264" xlink:type="simple"/></inline-formula>, this can hold if and only if <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e265" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e266" xlink:type="simple"/></inline-formula> for unsatisfied constraints. When parameter <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e267" xlink:type="simple"/></inline-formula> it can be shown that contrary to unsatisfied clauses, satisfied clauses <italic>must</italic> have <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e268" xlink:type="simple"/></inline-formula> (see <xref ref-type="bibr" rid="pone.0073400-Molnr1">[30]</xref>). However, this second statement is no longer true when <italic>B</italic> can have values larger than 2: there <italic>can be</italic> satisfied constraints for which <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e269" xlink:type="simple"/></inline-formula>. So let us denote as <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e270" xlink:type="simple"/></inline-formula> (<inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e271" xlink:type="simple"/></inline-formula>), the number of clauses for which <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e272" xlink:type="simple"/></inline-formula> and there are exactly <italic>q</italic> variables satisfying the clause. (Here <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e273" xlink:type="simple"/></inline-formula> is exactly the number of unsatisfied constraints.) If there are <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e274" xlink:type="simple"/></inline-formula> clauses with <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e275" xlink:type="simple"/></inline-formula> and satisfied by exactly <italic>q</italic> variables, from the definitions introduced in <xref ref-type="disp-formula" rid="pone.0073400.e254">Eq. (28)</xref> we get:<disp-formula id="pone.0073400.e276"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pone.0073400.e276" xlink:type="simple"/><label>(30)</label></disp-formula><disp-formula id="pone.0073400.e277"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pone.0073400.e277" xlink:type="simple"/><label>(31)</label></disp-formula></p>
<p>It follows that:<disp-formula id="pone.0073400.e278"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pone.0073400.e278" xlink:type="simple"/><label>(32)</label></disp-formula></p>
<p>We will show that the second sum is zero. If we have a clause satisfied by <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e279" xlink:type="simple"/></inline-formula> variables, <italic>q</italic> being an integer this is equivalent with the condition <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e280" xlink:type="simple"/></inline-formula>, where <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e281" xlink:type="simple"/></inline-formula> denotes the integer part of the number. Using the boundaries defined for parameter <italic>B</italic> it follows that <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e282" xlink:type="simple"/></inline-formula>. Using again that we are in a fixed point (<xref ref-type="disp-formula" rid="pone.0073400.e262">Eq. (29)</xref>)<disp-formula id="pone.0073400.e283"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pone.0073400.e283" xlink:type="simple"/><label>(33)</label></disp-formula><disp-formula id="pone.0073400.e284"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pone.0073400.e284" xlink:type="simple"/><label>(34)</label></disp-formula>where we used again that the clause is satisfied by exactly <italic>q</italic> variables, so <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e285" xlink:type="simple"/></inline-formula>. Because of this inequality (34) we cannot have <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e286" xlink:type="simple"/></inline-formula> and it follows that <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e287" xlink:type="simple"/></inline-formula>. In <xref ref-type="disp-formula" rid="pone.0073400.e278">Eq.(32)</xref> the negative sum disappears and we have:<disp-formula id="pone.0073400.e288"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pone.0073400.e288" xlink:type="simple"/><label>(35)</label></disp-formula></p>
<p>Because <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e289" xlink:type="simple"/></inline-formula> equals the number of unsatisfied clauses, if <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e290" xlink:type="simple"/></inline-formula> is not a solution, then <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e291" xlink:type="simple"/></inline-formula><disp-formula id="pone.0073400.e292"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pone.0073400.e292" xlink:type="simple"/><label>(36)</label></disp-formula>Because the values of <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e293" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e294" xlink:type="simple"/></inline-formula> are non-negative integers, and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e295" xlink:type="simple"/></inline-formula> it follows that there must be at least one value <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e296" xlink:type="simple"/></inline-formula> such that:<disp-formula id="pone.0073400.e297"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pone.0073400.e297" xlink:type="simple"/><label>(37)</label></disp-formula>contradicting condition (28). This means that if <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e298" xlink:type="simple"/></inline-formula> is not a solution of <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0073400.e299" xlink:type="simple"/></inline-formula> it cannot be a fixed point.</p>
</sec></sec></body>
<back>
<ack>
<p>We thank Zoltán Toroczkai and Zoltán Néda for the useful discussions and a critical reading of the manuscript.</p>
</ack>
<ref-list>
<title>References</title>
<ref id="pone.0073400-Solomon1"><label>1</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Solomon</surname><given-names>P</given-names></name> (<year>2000</year>) <article-title>Device innovation and material challenges at the limits of CMOS technology</article-title>. <source>An Rev of Materials Science</source> <volume>30</volume>: <fpage>681</fpage>–<lpage>697</lpage>.</mixed-citation>
</ref>
<ref id="pone.0073400-The1"><label>2</label>
<mixed-citation publication-type="other" xlink:type="simple">The International Technology Roadmap for Semiconductors (2013) Available: <ext-link ext-link-type="uri" xlink:href="http://www.itrs.net" xlink:type="simple">http://www.itrs.net</ext-link>.Accessed 2013 Aug 16.</mixed-citation>
</ref>
<ref id="pone.0073400-Branicky1"><label>3</label>
<mixed-citation publication-type="other" xlink:type="simple">Branicky M (1994) Analog computation with continuous ODEs. Workshop on Physics and Computation, Dallas TX USA : 265–274.</mixed-citation>
</ref>
<ref id="pone.0073400-Siegelmann1"><label>4</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Siegelmann</surname><given-names>H</given-names></name>, <name name-style="western"><surname>Sontag</surname><given-names>E</given-names></name> (<year>1994</year>) <article-title>Analog computation via neural networks</article-title>. <source>Theoretical Computer Science</source> <volume>131</volume>: <fpage>331</fpage>–<lpage>360</lpage>.</mixed-citation>
</ref>
<ref id="pone.0073400-Moore1"><label>5</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Moore</surname><given-names>C</given-names></name> (<year>1996</year>) <article-title>Recursion theory on the reals and continuous-time computation</article-title>. <source>Theoretical Computer Science</source> <volume>162</volume>: <fpage>23</fpage>–<lpage>44</lpage>.</mixed-citation>
</ref>
<ref id="pone.0073400-BenHur1"><label>6</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Ben-Hur</surname><given-names>A</given-names></name>, <name name-style="western"><surname>Siegelmann</surname><given-names>H</given-names></name>, <name name-style="western"><surname>Fishman</surname><given-names>S</given-names></name> (<year>2002</year>) <article-title>A theory of complexity for continuous time systems</article-title>. <source>Journal of Complexity</source> <volume>18</volume>: <fpage>51</fpage>–<lpage>86</lpage>.</mixed-citation>
</ref>
<ref id="pone.0073400-Siegelmann2"><label>7</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Siegelmann</surname><given-names>H</given-names></name> (<year>1995</year>) <article-title>Computation beyond the Turing limit</article-title>. <source>Science</source> <volume>268</volume>: <fpage>545</fpage>–<lpage>548</lpage>.</mixed-citation>
</ref>
<ref id="pone.0073400-Sima1"><label>8</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Sima</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Orponen</surname><given-names>P</given-names></name> (<year>2003</year>) <article-title>Continuous-time symmetric Hopfield nets are computationally universal</article-title>. <source>Neur Comp</source> <volume>15</volume>: <fpage>693</fpage>–<lpage>733</lpage>.</mixed-citation>
</ref>
<ref id="pone.0073400-Sima2"><label>9</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Sima</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Orponen</surname><given-names>P</given-names></name> (<year>2003</year>) <article-title>General-purpose computation with neural networks: A survey of complexity theoretic results</article-title>. <source>Neur Comp</source> <volume>15</volume>: <fpage>2727</fpage>–<lpage>2778</lpage>.</mixed-citation>
</ref>
<ref id="pone.0073400-Orponen1"><label>10</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Orponen</surname><given-names>P</given-names></name> (<year>1992</year>) <article-title>Neural Networks and Complexity Theory</article-title>. <source>Lect Notes in Computer Science</source> <volume>629</volume>: <fpage>50</fpage>–<lpage>61</lpage>.</mixed-citation>
</ref>
<ref id="pone.0073400-Orponen2"><label>11</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Orponen</surname><given-names>P</given-names></name> (<year>1997</year>) <article-title>The computational power of continuous time neural networks</article-title>. <source>Lect Notes in Computer Science</source> <volume>1338</volume>: <fpage>86</fpage>–<lpage>103</lpage>.</mixed-citation>
</ref>
<ref id="pone.0073400-Chua1"><label>12</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Chua</surname><given-names>L</given-names></name>, <name name-style="western"><surname>Yang</surname><given-names>L</given-names></name> (<year>1988</year>) <article-title>Cellular neural networks - theory</article-title>. <source>IEEE Trans on Circuits and Systems I</source> <volume>35</volume>: <fpage>1257</fpage>–<lpage>1272</lpage>.</mixed-citation>
</ref>
<ref id="pone.0073400-Roska1"><label>13</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Roska</surname><given-names>T</given-names></name>, <name name-style="western"><surname>Chua</surname><given-names>L</given-names></name> (<year>1993</year>) <article-title>The CNN Universal Machine—An Analogic Array Computer</article-title>. <source>IEEE Trans on Circuits and Systems II</source> <volume>40</volume>: <fpage>163</fpage>–<lpage>173</lpage>.</mixed-citation>
</ref>
<ref id="pone.0073400-Liu1"><label>14</label>
<mixed-citation publication-type="other" xlink:type="simple">Liu S-C, Kramer J, Indiveri G, Delbrück T, Douglas R (2002) Analog VLSI - Circuits and Principles. Cambridge, MA: MIT Press.</mixed-citation>
</ref>
<ref id="pone.0073400-Douglas1"><label>15</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Douglas</surname><given-names>R</given-names></name>, <name name-style="western"><surname>Mahowald</surname><given-names>M</given-names></name>, <name name-style="western"><surname>Mead</surname><given-names>C</given-names></name> (<year>1995</year>) <article-title>Neuromorphic Analog VLSI</article-title>. <source>Annual Rev of Nuroscience</source> <volume>18</volume>: <fpage>255</fpage>–<lpage>281</lpage>.</mixed-citation>
</ref>
<ref id="pone.0073400-Chua2"><label>16</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Chua</surname><given-names>L</given-names></name>, <name name-style="western"><surname>Roska</surname><given-names>T</given-names></name>, <name name-style="western"><surname>Venetianer</surname><given-names>P</given-names></name> (<year>1993</year>) <article-title>The CNN is as universal as the Turing Machine</article-title>. <source>IEEE Trans on Circuits and Systems I - Fund Theory and App</source> <volume>40</volume>: <fpage>289</fpage>–<lpage>291</lpage>.</mixed-citation>
</ref>
<ref id="pone.0073400-Hopfield1"><label>17</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Hopfield</surname><given-names>J</given-names></name> (<year>1984</year>) <article-title>Neurons with graded response have collective computational properties like those of 2-state neurons</article-title>. <source>Proc of the Nat Ac of Sci of the United States of America - Bio Scie</source> <volume>81</volume>: <fpage>3088</fpage>–<lpage>3092</lpage>.</mixed-citation>
</ref>
<ref id="pone.0073400-Hopfield2"><label>18</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Hopfield</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Tank</surname><given-names>D</given-names></name> (<year>1985</year>) <article-title>Neural Computation of Decisions in Optimization Problems</article-title>. <source>Bio Cyber</source> <volume>52</volume>: <fpage>141</fpage>–<lpage>152</lpage>.</mixed-citation>
</ref>
<ref id="pone.0073400-Hopfield3"><label>19</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Hopfield</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Tank</surname><given-names>D</given-names></name> (<year>1986</year>) <article-title>Computing with Neural Circuits—A model</article-title>. <source>Science</source> <volume>233</volume>: <fpage>625</fpage>–<lpage>633</lpage>.</mixed-citation>
</ref>
<ref id="pone.0073400-ErcseyRavasz1"><label>20</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Ercsey-Ravasz</surname><given-names>M</given-names></name>, <name name-style="western"><surname>Roska</surname><given-names>T</given-names></name>, <name name-style="western"><surname>Néda</surname><given-names>Z</given-names></name> (<year>2009</year>) <article-title>Cellular Neural Networks for NP-Hard Optimization</article-title>. <source>Eurasip J on Advances in Signal Proc</source> <comment>doi:<ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1155/2009/646975" xlink:type="simple">10.1155/2009/646975</ext-link></comment></mixed-citation>
</ref>
<ref id="pone.0073400-ErcseyRavasz2"><label>21</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Ercsey-Ravasz</surname><given-names>M</given-names></name>, <name name-style="western"><surname>Roska</surname><given-names>T</given-names></name>, <name name-style="western"><surname>Néda</surname><given-names>Z</given-names></name> (<year>2009</year>) <article-title>Stochastic optimization of spin-glasses on cellular neural/nonlinear network based processors</article-title>. <source>Physica A - Statistical Mechanics and its Applications</source> <volume>388</volume>: <fpage>1024</fpage>–<lpage>1030</lpage>.</mixed-citation>
</ref>
<ref id="pone.0073400-ErcseyRavasz3"><label>22</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Ercsey-Ravasz</surname><given-names>M</given-names></name>, <name name-style="western"><surname>Roska</surname><given-names>T</given-names></name>, <name name-style="western"><surname>Néda</surname><given-names>Z</given-names></name> (<year>2008</year>) <article-title>Statistical physics on cellular neural network computers</article-title>. <source>Physica D - Nonlinear Phenomena</source> <volume>237</volume>: <fpage>1226</fpage>–<lpage>1234</lpage>.</mixed-citation>
</ref>
<ref id="pone.0073400-Chen1"><label>23</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Chen</surname><given-names>L</given-names></name>, <name name-style="western"><surname>Aihara</surname><given-names>K</given-names></name> (<year>1995</year>) <article-title>Chaotic Simulated Annealing by a Neural-Network Model with Transient Chaos</article-title>. <source>Neur Net</source> <volume>8</volume>: <fpage>915</fpage>–<lpage>930</lpage>.</mixed-citation>
</ref>
<ref id="pone.0073400-Chen2"><label>24</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Chen</surname><given-names>L</given-names></name>, <name name-style="western"><surname>Aihara</surname><given-names>K</given-names></name> (<year>1997</year>) <article-title>Chaos and asymptotical stability in discrete-time neural networks</article-title>. <source>Physica D</source> <volume>104</volume>: <fpage>286</fpage>–<lpage>325</lpage>.</mixed-citation>
</ref>
<ref id="pone.0073400-Wang1"><label>25</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Wang</surname><given-names>L</given-names></name>, <name name-style="western"><surname>Smith</surname><given-names>K</given-names></name> (<year>1998</year>) <article-title>On chaotic simulated annealing</article-title>. <source>IEEE Trans. on Neur Net</source> <volume>9</volume>: <fpage>716</fpage>–<lpage>718</lpage>.</mixed-citation>
</ref>
<ref id="pone.0073400-Wang2"><label>26</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Wang</surname><given-names>L</given-names></name>, <name name-style="western"><surname>Li</surname><given-names>S</given-names></name>, <name name-style="western"><surname>Tian</surname><given-names>F</given-names></name>, <name name-style="western"><surname>Fu</surname><given-names>X</given-names></name> (<year>2004</year>) <article-title>A noisy chaotic neural network for solving combinatorial optimization problems: Stochastic chaotic simulated annealing. IEEE Trans. on Sys</article-title>. <source>MAN and Cybernetics Part B - Cybernetics</source> <volume>34</volume>: <fpage>2119</fpage>–<lpage>2125</lpage>.</mixed-citation>
</ref>
<ref id="pone.0073400-Kwok1"><label>27</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Kwok</surname><given-names>T</given-names></name>, <name name-style="western"><surname>Smith</surname><given-names>K</given-names></name> (<year>1999</year>) <article-title>A unified framework for chaotic neural-network approaches to combinatorial optimization</article-title>. <source>IEEE Trans on Neur Net</source> <volume>10</volume>: <fpage>978</fpage>–<lpage>981</lpage>.</mixed-citation>
</ref>
<ref id="pone.0073400-ErcseyRavasz4"><label>28</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Ercsey-Ravasz</surname><given-names>M</given-names></name>, <name name-style="western"><surname>Toroczkai</surname><given-names>Z</given-names></name> (<year>2011</year>) <article-title>Optimization hardness as transient chaos in an analog approach to constraint satisfaction</article-title>. <source>Nature Physics</source> <volume>7</volume>: <fpage>966</fpage>–<lpage>970</lpage>.</mixed-citation>
</ref>
<ref id="pone.0073400-ErcseyRavasz5"><label>29</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Ercsey-Ravasz</surname><given-names>M</given-names></name>, <name name-style="western"><surname>Toroczkai</surname><given-names>Z</given-names></name> (<year>2012</year>) <article-title>The Chaos Within Sudoku</article-title>. <source>Scientific Reports</source> <volume>2</volume>: <fpage>725</fpage>.</mixed-citation>
</ref>
<ref id="pone.0073400-Molnr1"><label>30</label>
<mixed-citation publication-type="other" xlink:type="simple">Molnár B, Toroczkai Z, Ercsey-Ravasz M (2012) Continuous-time Neural Networks Without Local Traps for Solving Boolean Satisfiability. 13th Int. Workshop on Cellular Nanoscale Networks and their Applications (CNNA), Turin, IT, Aug 29–31, 2012.</mixed-citation>
</ref>
<ref id="pone.0073400-Cook1"><label>31</label>
<mixed-citation publication-type="other" xlink:type="simple">Cook SA (1971) The complexity of theorem-proving procedures. ACM Symposium on Theory of Computing (STOC). pp. 151–158. doi: 10.1145/800157.805047.</mixed-citation>
</ref>
<ref id="pone.0073400-Garey1"><label>32</label>
<mixed-citation publication-type="other" xlink:type="simple">Garey MR, Johnson DS (1979) Computers and Intractability: A Guide to the Theory of NP-Completeness (Series of Books in the Mathematical Sciences), 1st edition. Stuttgart, Germany: W. H. Freeman &amp; Co Ltd.</mixed-citation>
</ref>
<ref id="pone.0073400-Kirkpatrick1"><label>33</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Kirkpatrick</surname><given-names>S</given-names></name>, <name name-style="western"><surname>Selman</surname><given-names>B</given-names></name> (<year>1994</year>) <article-title>Critical-Behavior in the Satisfiability of Random Boolean Expressions</article-title>. <source>Science</source> <volume>264</volume>: <fpage>1297</fpage>–<lpage>1301</lpage>.</mixed-citation>
</ref>
<ref id="pone.0073400-Krzakala1"><label>34</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Krzakala</surname><given-names>F</given-names></name>, <name name-style="western"><surname>Montanari</surname><given-names>A</given-names></name>, <name name-style="western"><surname>Ricci-Tersenghi</surname><given-names>F</given-names></name>, <name name-style="western"><surname>Semerijan</surname><given-names>G</given-names></name>, <name name-style="western"><surname>Zdeborova</surname><given-names>L</given-names></name> (<year>2007</year>) <article-title>Gibbs states and the set of solutions of random constraint satisfaction problems</article-title>. <source>PNAS</source> <volume>104</volume>: <fpage>10318</fpage>–<lpage>10323</lpage>.</mixed-citation>
</ref>
<ref id="pone.0073400-Krzakala2"><label>35</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Krzakala</surname><given-names>F</given-names></name>, <name name-style="western"><surname>Zdeborova</surname><given-names>L</given-names></name> (<year>2008</year>) <article-title>Phase Transitions and Computational Difficulty in Random Constraint Satisfaction Problems</article-title>. <source>Journal of Physics: Conference Series</source> <volume>95</volume>: <fpage>012012</fpage>.</mixed-citation>
</ref>
<ref id="pone.0073400-Gu1"><label>36</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Gu</surname><given-names>J</given-names></name> (<year>1994</year>) <article-title>Global optimization for satisfiability (SAT) problem</article-title>. <source>IEEE Trans on Knowledge and Data Engineering</source> <volume>6</volume>: <fpage>361</fpage>–<lpage>381</lpage>.</mixed-citation>
</ref>
<ref id="pone.0073400-Gu2"><label>37</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Gu</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Gu</surname><given-names>QP</given-names></name>, <name name-style="western"><surname>Du</surname><given-names>DZ</given-names></name> (<year>1999</year>) <article-title>On optimizing the satisfiability (SAT) problem</article-title>. <source>J Comput Sci Technol</source> <volume>14</volume>: <fpage>1</fpage>–<lpage>17</lpage>.</mixed-citation>
</ref>
<ref id="pone.0073400-Nagamatu1"><label>38</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Nagamatu</surname><given-names>M</given-names></name>, <name name-style="western"><surname>Yanaru</surname><given-names>T</given-names></name> (<year>1996</year>) <article-title>On the stability of Lagrange programming neural networks for satisfiability problems of propositional calculus</article-title>. <source>Neurocomputing</source> <volume>13</volume>: <fpage>119</fpage>–<lpage>133</lpage>.</mixed-citation>
</ref>
<ref id="pone.0073400-Wah1"><label>39</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Wah</surname><given-names>B</given-names></name>, <name name-style="western"><surname>Chang</surname><given-names>Y</given-names></name> (<year>1997</year>) <article-title>Trace-based methods for solving nonlinear global optimization and satisfiability problems</article-title>. <source>J of Global Optimization</source> <volume>10</volume>: <fpage>107</fpage>–<lpage>141</lpage>.</mixed-citation>
</ref>
<ref id="pone.0073400-Wah2"><label>40</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Wah</surname><given-names>B</given-names></name>, <name name-style="western"><surname>Wang</surname><given-names>T</given-names></name>, <name name-style="western"><surname>Shang</surname><given-names>Y</given-names></name>, <name name-style="western"><surname>Wu</surname><given-names>Z</given-names></name> (<year>2000</year>) <article-title>Improving the performance of weighted Lagrange-multiplier methods for nonlinear constrained optimization</article-title>. <source>Information Sciences</source> <volume>124</volume>: <fpage>241</fpage>–<lpage>272</lpage>.</mixed-citation>
</ref>
<ref id="pone.0073400-Lai1"><label>41</label>
<mixed-citation publication-type="other" xlink:type="simple">Lai YC, Tél T (2011) Transient Chaos: Complex Dynamics on Finite-Time Scales. Berlin: Springer.</mixed-citation>
</ref>
<ref id="pone.0073400-Tl1"><label>42</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Tél</surname><given-names>T</given-names></name>, <name name-style="western"><surname>Lai</surname><given-names>YC</given-names></name> (<year>2008</year>) <article-title>Chaotic transients in spatially extended systems</article-title>. <source>Physics Reports</source> <volume>460</volume>: <fpage>245</fpage>–<lpage>275</lpage>.</mixed-citation>
</ref>
<ref id="pone.0073400-Forti1"><label>43</label>
<mixed-citation publication-type="other" xlink:type="simple">Forti M, Garay B, Koller M, Pancioni L (2012) An Experimental Study on Long Transient Oscillations in Cooperative CNN Rings. 13th Int. Workshop on Cellular Nanoscale Networks and their Applications (CNNA), Turin, IT, Aug 29–31, 2012.</mixed-citation>
</ref>
</ref-list></back>
</article>