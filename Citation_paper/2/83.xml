<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article
  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article" dtd-version="3.0" xml:lang="en">
<front>
<journal-meta>
<journal-id journal-id-type="nlm-ta">PLoS ONE</journal-id>
<journal-id journal-id-type="publisher-id">plos</journal-id>
<journal-id journal-id-type="pmc">plosone</journal-id><journal-title-group>
<journal-title>PLoS ONE</journal-title></journal-title-group>
<issn pub-type="epub">1932-6203</issn>
<publisher>
<publisher-name>Public Library of Science</publisher-name>
<publisher-loc>San Francisco, USA</publisher-loc></publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">PONE-D-13-03334</article-id>
<article-id pub-id-type="doi">10.1371/journal.pone.0080156</article-id>
<article-categories><subj-group subj-group-type="heading"><subject>Research Article</subject></subj-group></article-categories>
<title-group>
<article-title>PD5: A General Purpose Library for Primer Design Software</article-title>
<alt-title alt-title-type="running-head">PD5: Software for Primer Design</alt-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Riley</surname><given-names>Michael C.</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib>
<contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Aubrey</surname><given-names>Wayne</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib>
<contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Young</surname><given-names>Michael</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib>
<contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Clare</surname><given-names>Amanda</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib>
</contrib-group>
<aff id="aff1"><label>1</label><addr-line>Department of Computer Science, Aberystwyth University, Aberystwyth, United Kingdom</addr-line></aff>
<aff id="aff2"><label>2</label><addr-line>Institute of Biological, Environmental and Rural Sciences, Aberystwyth University, Aberystwyth, United Kingdom</addr-line></aff>
<contrib-group>
<contrib contrib-type="editor" xlink:type="simple"><name name-style="western"><surname>Gibas</surname><given-names>Cynthia</given-names></name>
<role>Editor</role>
<xref ref-type="aff" rid="edit1"/></contrib>
</contrib-group>
<aff id="edit1"><addr-line>University of North Carolina at Charlotte, United States of America</addr-line></aff>
<author-notes>
<corresp id="cor1">* E-mail: <email xlink:type="simple">mhr@aber.ac.uk</email></corresp>
<fn fn-type="conflict"><p>The authors have declared that no competing interests exist.</p></fn>
<fn fn-type="con"><p>Conceived and designed the experiments: MCR WA MY AC . Performed the experiments: MCR WA AC . Analyzed the data: MCR WA MY AC. Contributed reagents/materials/analysis tools: WA. Wrote the paper: MCR WA MY AC.</p></fn>
</author-notes>
<pub-date pub-type="collection"><year>2013</year></pub-date>
<pub-date pub-type="epub"><day>21</day><month>11</month><year>2013</year></pub-date>
<volume>8</volume>
<issue>11</issue>
<elocation-id>e80156</elocation-id>
<history>
<date date-type="received"><day>22</day><month>1</month><year>2013</year></date>
<date date-type="accepted"><day>30</day><month>9</month><year>2013</year></date>
</history>
<permissions>
<copyright-year>2013</copyright-year>
<copyright-holder>Riley et al</copyright-holder><license xlink:href="http://creativecommons.org/licenses/by/3.0/" xlink:type="simple"><license-p>This is an open-access article distributed under the terms of the <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/3.0/" xlink:type="simple">Creative Commons Attribution License</ext-link>, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.</license-p></license></permissions>
<abstract><sec>
<title>Background</title>
<p>Complex PCR applications for large genome-scale projects require fast, reliable and often highly sophisticated primer design software applications. Presently, such applications use pipelining methods to utilise many third party applications and this involves file parsing, interfacing and data conversion, which is slow and prone to error. A fully integrated suite of software tools for primer design would considerably improve the development time, the processing speed, and the reliability of bespoke primer design software applications.</p>
</sec><sec>
<title>Results</title>
<p>The PD5 software library is an open-source collection of classes and utilities, providing a complete collection of software building blocks for primer design and analysis. It is written in object-oriented C<sup>++</sup> with an emphasis on classes suitable for efficient and rapid development of bespoke primer design programs. The modular design of the software library simplifies the development of specific applications and also integration with existing third party software where necessary. We demonstrate several applications created using this software library that have already proved to be effective, but we view the project as a dynamic environment for building primer design software and it is open for future development by the bioinformatics community. Therefore, the PD5 software library is published under the terms of the GNU General Public License, which guarantee access to source-code and allow redistribution and modification.</p>
</sec><sec>
<title>Conclusions</title>
<p>The PD5 software library is downloadable from Google Code and the accompanying Wiki includes instructions and examples: <ext-link ext-link-type="uri" xlink:href="http://code.google.com/p/primer-design" xlink:type="simple">http://code.google.com/p/primer-design</ext-link></p>
</sec></abstract>
<funding-group><funding-statement>This work was supported by the Biotechnology and Biological Sciences Research Council (BB/G024782/1); a Royal Academy of Engineering/Engineering and Physical Sciences Research Council Research Fellowship [A.C.], and Aberystwyth University. The funders had no role in study design, data collection and analysis, decision to publish, or preparation of the manuscript.</funding-statement></funding-group><counts><page-count count="8"/></counts></article-meta>
</front>
<body><sec id="s1">
<title>Introduction</title>
<p>As experimental DNA sequence manipulations become increasingly complex and large scale genome engineering projects are planned, software is needed for the design and <italic>in silico</italic> evaluation of oligonucleotide primers that satisfy complex criteria. Software packages currently available are most suited for the design of primer pairs for individual PCR applications. Experimental procedures involving multiple sequential PCR steps often require more complex analysis, which is time consuming and error prone using the currently available programs. An automated procedure is the best approach for the complex analyses required. However, a considerable investment of time and effort is needed to build and test the requisite algorithms. The development time can be reduced considerably by a modular method using reusable primer design components from a tried and tested software library, which can easily be employed in the final primer design system.</p>
<p>The most popular freely available primer design software is Primer3 <xref ref-type="bibr" rid="pone.0080156-Rozen1">[1]</xref>, <xref ref-type="bibr" rid="pone.0080156-Untergasser1">[2]</xref>. It consists of open source C code with two web front ends (primer3web and primer3plus). Its purpose is to find suitable primers to amplify a sub-sequence, subject to a range of user defined conditions. Input and output to Primer3 are achieved using text files in a specific file format, which, along with its availability, has made it a popular choice for inclusion in many primer design pipelines as the central primer design tool. In fact, the majority of primer design software now uses Primer3 as a sub-component. Examples include RExPrimer <xref ref-type="bibr" rid="pone.0080156-Piriyapongsa1">[3]</xref>, QuantPrime <xref ref-type="bibr" rid="pone.0080156-Arvidsson1">[4]</xref>, JCVI Primer Designer <xref ref-type="bibr" rid="pone.0080156-Li1">[5]</xref>, UniPrime2 <xref ref-type="bibr" rid="pone.0080156-Boutros1">[6]</xref>, BatchPrimer3 <xref ref-type="bibr" rid="pone.0080156-You1">[7]</xref>, PrimerZ <xref ref-type="bibr" rid="pone.0080156-Tsai1">[8]</xref>, ConservedPrimers 2.0 <xref ref-type="bibr" rid="pone.0080156-You2">[9]</xref> and MPPrimer <xref ref-type="bibr" rid="pone.0080156-Shen1">[10]</xref>. Primer3 is flexible with regard to parameters, but limited to simple applications and single primer pairs. More complex applications must be handled by additional software that calls Primer3 as and when necessary.</p>
<p>Those primer design applications that do not use Primer3 usually entail the exploration of more complex issues associated with particular problems. They are packaged as specific applications that solve these particular problems rather than as a general purpose software library and were never intended to have flexible/reusable code. Two examples are Osprey <xref ref-type="bibr" rid="pone.0080156-Gordon1">[11]</xref> for the design of oligonucleotides for DNA sequencing and microarrays, and Primique <xref ref-type="bibr" rid="pone.0080156-Fredslund1">[12]</xref> for the design of specific primers to distinguish each sequence within a family of DNA sequences. For these applications algorithms were developed to explore issues such as details of thermodynamics and non-specific binding, rather than using the algorithms of Primer3, while at the same time producing families of primers that form a consistent set.</p>
<p>Our development of a new approach to primer design was first inspired by the need to design and analyse large chimaeric primers. These chimaeric primers are used in a multi-stage PCR process for the scar free, seamless deletion of genes in <italic>Saccharomyces cerevisiae</italic> <xref ref-type="bibr" rid="pone.0080156-Akada1">[13]</xref>. This method requires the design of three sets of primer pairs: one conventional primer pair of 18–23 bases; one pair that can have primers up to 60 bases in length and a third pair of chimaeric primers, which can be up to 100 bases in length. This method is also required to perform the analysis of dimerisation, annealing temperatures and secondary binding characteristics of all of these primers. The use of Primer3 for this purpose would have been unwieldy, requiring the provision of many additional software components, such as an application to handle primers over 36 bases in length and an application to provide a search for potential non-specific binding locations. Primer3 was not designed as a library of reusable software components, or as a codebase that can easily be extended by the bioinformatics community. It is a single program with many options, around which different wrapper programs can be written, to parse the output and perform further processing. However, the core has now been re-packaged to provide libprimer3 <xref ref-type="bibr" rid="pone.0080156-Untergasser1">[2]</xref>, to give programmers closer access. The corresponding header file lists 243 functions at the time of writing. It is possible to make direct calls to these functions and the NCBI Primer-BLAST service does exactly this. We wanted to use a library approach to development from the beginning for PD5, with many small reusable components of code, which is more suited to the problem at hand and would provide increased flexibility, increased ease of maintenance, and be more extensible.</p>
<p>We have developed PD5 to provide a general purpose toolkit of reusable software components suitable for an extensive range of primer design applications. Our aim is for PD5 to be a freely available open source toolkit, to which many community-generated modules can be contributed. In the future we hope that bioinformaticians will more easily be able to re-use the acquired knowledge of primer design, accumulated within the PD5 library.</p>
</sec><sec id="s2">
<title>Results and Discussion</title>
<p>Here we demonstrate the capability of PD5 with three different example applications all built using PD5 software library components:</p>
<list list-type="order"><list-item>
<p>A command-line or web-based application for discovery of a suitable primer pair to amplify a target region.</p>
</list-item><list-item>
<p>Design of large chimaeric primers to be used in a 3-stage PCR procedure for the precise scar-free deletion of genes in the genome of <italic>S. cerevisiae</italic>.</p>
</list-item><list-item>
<p>Design of primers to amplify microsatellite regions to use as markers for a mapping population.</p>
</list-item></list>
<sec id="s2a">
<title>Discovery of primer pairs</title>
<p>In this example application we provide a command-line interface to the PD5 classes/methods to discover suitable primer pairs for amplification of a target region of a sequence, controlled by a variety of parameters. This command-line application is named <italic>pd5_cli</italic> and is available as part of the PD5 package. This serves mainly as a confirmation of the effectiveness of the PD5 library, and also provides an example for others who want to understand how to employ the PD5 library in their primer design applications. Furthermore, <italic>pd5_cli</italic> can be incorporated into a larger process or script to easily generate a large number of primers automatically without constant user intervention. The output is produced as plain text, HTML or CSV as required by the user. We have used this interface to generate 5127 sets of confirmation primers for seamless deletions of the ORFs in the <italic>S. pombe</italic> genome. These are available at <ext-link ext-link-type="uri" xlink:href="http://www.aber.ac.uk/en/cs/research/cb/projects/pcr-primer-design/" xlink:type="simple">http://www.aber.ac.uk/en/cs/research/cb/projects/pcr-primer-design/</ext-link>.</p>
<p>We have also provided a web interface <italic>PD5Web</italic> (<ext-link ext-link-type="uri" xlink:href="http://PD5web.dcs.aber.ac.uk/" xlink:type="simple">http://PD5web.dcs.aber.ac.uk/</ext-link>), which allows the user to input their template sequence and chosen options. The website then uses <italic>pd5_cli</italic> to produce the primers and provides a web-based display of the results.</p>
<p>This command line application can also be used from within the Galaxy bioinformatics platform <xref ref-type="bibr" rid="pone.0080156-Blankenberg1">[14]</xref>–<xref ref-type="bibr" rid="pone.0080156-Giardine1">[16]</xref>. We have provided the necessary configuration file, and the PD5 wiki page describes the simple setup procedure (essentially, put PD5 folder as a subfolder of Galaxy's tools, and add a few lines to your Galaxy tools configuration file).</p>
</sec><sec id="s2b">
<title>Design of large chimaeric primers for coupled PCR</title>
<p>PD5 is presently being used in the design of primer sets for the precise, seamless deletion of ORFs in the <italic>S. cerevisiae</italic> genome. For this work an application written in C/C<sup>++</sup> programming language has been developed making full use of the PD5 software library.</p>
<p>This method is based on three PCR reactions employing two different primer pairs to amplify regions of the yeast genome and to construct a URA3-based cassette. The position of one reverse primer is constrained to a fixed location on the template and so, to obtain a reasonable selection of candidates, the length of this primer can range from 30 to 60 bases, with an optimum of 40 bases. The forward primer is selected from a region 500–1000 bases upstream with similar length and GC content as the reverse primer.</p>
<p>Suitable primers for amplifying the URA3 marker gene are also required and these are concatenated with other sequences from the template to make long chimaeric primers. These long primers cannot be designed and optimised using any currently available primer analysis tools. However, the PD5 software library provides modules that are ideally suited to perform this task.</p>
<p>Furthermore, this application is required to automatically select optimum primers for several thousand PCRs without user intervention, and also to be processed using a distributed computer system. Again, the PD5 software library contains the necessary components, which are ideally suited for this.</p>
<p>It was this project that first inspired the development of PD5. Originally, we used Primer3 to find a selection of suitable primers, and BLAST, together with some supporting software, to detect secondary binding and secondary products. Primer3 could not analyse the long primers. We had problems with BLAST in that, to obtain the necessary sensitivity, we used shorter word sizes (4 and 5) and higher E values than recommended by NCBI. This dramatically increased processing time and produced many irrelevant hits, which required filtering by a BLAST file output parser, but still did not detect some significant secondary binding sites (the reasons for this are discussed in the <xref ref-type="sec" rid="s4">Methods</xref> section). These problems were not exclusive to Primer3 and BLAST, hence the development of new primer design methods, which are now available in the PD5 software library.</p>
<p>The PD5 library solves several issues that are not addressed by other general purpose primer design software:</p>
<list list-type="bullet"><list-item>
<p>The detection of potential secondary binding and secondary products was improved by using a sequence matching algorithm optimised for DNA sequences. These methods are included in the PD5 <italic>dna_find</italic> class.</p>
</list-item><list-item>
<p>Existing methods for determining annealing temperature tend to be inaccurate when applied to long primers. To compensate for this, PD5 can simply generate primer pairs of similar length and GC content.</p>
</list-item><list-item>
<p>The chimaeric primers used in the second PCR process can be up to 100 bases in length. The analysis of long primers such as these cannot be done with existing software and so the improved dimerisation analysis methods for long primers, included in PD5, proved invaluable.</p>
</list-item></list>
<p>The resulting code was executed on a Beowulf computer cluster using Condor <xref ref-type="bibr" rid="pone.0080156-Tannenbaum1">[17]</xref> and produced primers that were used successfully to delete <italic>S. cerevisiae</italic> genes. In <xref ref-type="supplementary-material" rid="pone.0080156.s001">Information S1</xref> (Section S1, Figures S1 and S2, Tables S1, S2 and S3) we provide a sample of the many PCR gel images that we have as evidence for the effectiveness of the primers that were designed for this work. The first gel image demonstrates good results from the first PCR stage for 32 distinct pairs of chimaeric primers targeting 32 different ORFs. This image is part of a larger collection detailing results for the seamless deletion technique, and the full set is to be published separately. The second gel image demonstrates good results for 12 pairs of primers designed to confirm the presence of 12 ORFs in a wild type strain of <italic>S. cerevisiae</italic>.</p>
</sec><sec id="s2c">
<title>Microsatellite markers and flanking primers - PD5_ssr</title>
<p>The PD5 software modules can be integrated easily with other code where required to perform a primer design task. In this instance the task was to find microsatellite regions in the <italic>Miscanthus giganteus</italic> unassembled genome sequence data, and then to design flanking primers for each of these regions so that the microsatellites could be used as potential markers.</p>
<p>There are many existing software tools for the task of locating microsatellites (short tandem repeats of 2 to 6 nucleotides), for example, Sputnik (available from <ext-link ext-link-type="uri" xlink:href="http://espressosoftware.com/sputnik/" xlink:type="simple">http://espressosoftware.com/sputnik/</ext-link>) and Misa <xref ref-type="bibr" rid="pone.0080156-Thiel1">[18]</xref>. Indeed, there are even software tools that already integrate the process of finding microsatellites and the process of finding their suitable flanking primers, for example BatchPrimer <xref ref-type="bibr" rid="pone.0080156-You1">[7]</xref> and PrimerPro (available from <ext-link ext-link-type="uri" xlink:href="http://webdocs.cs.ualberta.ca/yifeng/primerpro/" xlink:type="simple">http://webdocs.cs.ualberta.ca/yifeng/primerpro/</ext-link>). Our use of PD5 for this task serves the purpose of providing another illustrative use of this library. We demonstrate the flexibility of PD5 and show how it can be integrated with existing applications to facilitate the design of primers for analysing individual microsatellites in the <italic>Miscanthus</italic> genome. For this purpose we developed a C/C<sup>++</sup> application named PD5_ssr, which integrates PD5 with Sputnik. Sputnik is a public domain application for the discovery of microsatellites and it was chosen for its popularity, speed and simplicity.</p>
<p>We first made minor modifications to Sputnik to wrap it as a C<sup>++</sup> class, so that its previously hardcoded parameters can be easily changed, and so that multiple Sputnik instances can be created with different parameters. Then we begin by creating an instance of Sputnik with strict parameters, to search for high-scoring microsatellites. When a microsatellite region is found, the Sputnik code makes a call to PD5_ssr to start the search for flanking primers. During the search for primers PD5_ssr makes further calls to new instances of Sputnik (with different, more relaxed parameters) in order to make sure that the primers themselves and the flanking regions up to the microsatellite contain no other microsatellites. In this way the two pieces of software are closely intertwined, which is efficient and avoids the reading and writing of intermediate files, but their interaction remains restricted to just two function calls, and so the software remains maintainable and loosely coupled.</p>
<p>The sequence data comprised 21 Gb of short unassembled sequence reads (averaging approx 500 bases) from a Roche 454 next generation sequencer, equivalent to about three times coverage of the <italic>Miscanthus giganteus</italic> genome.</p>
<p>The constraints for the primer design for this application were as follows:</p>
<list list-type="bullet"><list-item>
<p>Primers to be 20–30 bases in length, for economy.</p>
</list-item><list-item>
<p>Product sizes to be between approximately 80 and 300 bases.</p>
</list-item><list-item>
<p>Products should not contain Ns (frequently found in the reads).</p>
</list-item><list-item>
<p>Primers to have the same GC content, with a preferred annealing temperature of <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0080156.e001" xlink:type="simple"/></inline-formula> as calculated using the oligoTm code incorporated from Primer3.</p>
</list-item><list-item>
<p>Primers must not contain the microsatellite repeating unit.</p>
</list-item><list-item>
<p>Primers and flanking regions must not contain other microsatellites.</p>
</list-item><list-item>
<p>Primers must not have any non-specific binding within the same read fragment.</p>
</list-item></list>
<p>In total, 16124 microsatellite regions comprising at least 21 base pairs of repeating units of two, three or four bases, having flanking primers consistent with the above constraints, were produced by PD5_ssr for <italic>Miscanthus</italic>. Their utility is currently being evaluated experimentally. The full code for PD5_ssr is available as part of the PD5 package.</p>
</sec></sec><sec id="s3">
<title>Conclusion</title>
<p>PD5 is a versatile software library of C<sup>++</sup> code for developing fast and efficient applications for primer design. As an example of the speed of PD5, the <italic>pd5_cli</italic> command line application can be used to design pairs of confirmation primers for every one of the 5143 ORFs in <italic>S. pombe</italic> in a total of just 29 seconds on a standard desktop Linux machine without a search for alternative binding sites, or 18 hours when we design the primers using a search of the whole genome for potential alternative products to avoid. This software library is freely available as open source under the GPL3 licence. The main advantages in using the PD5 library are the following: -</p>
<list list-type="bullet"><list-item>
<p>The modular design of the software library simplifies integration of PD5 modules with other existing code, and allows further methods/modules to be added as needed.</p>
</list-item><list-item>
<p>The ability to design and analyse long primers (<inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0080156.e002" xlink:type="simple"/></inline-formula> bases).</p>
</list-item><list-item>
<p>The discovery of potential secondary products can be performed automatically.</p>
</list-item><list-item>
<p>PD5 includes specialised methods for the detection of potential dimerisation that out perform existing methods in the analysis of long primers, but remain highly effective with primers of standard length.</p>
</list-item><list-item>
<p>Versatile methods are available for special applications such as the design of primers lacking either cytosine or guanine.</p>
</list-item><list-item>
<p>PD5 provides a non-heuristic method for detection of secondary binding locations.</p>
</list-item><list-item>
<p>PD5 has a versatile prioritised sorting method as well as a multi-objective optimisation approach for the selection of optimum primers. In the event that there are no optimum primers, the PD5 sorting method can select the best available sub-optimal primers rather than none at all.</p>
</list-item></list>
<p>Although nearly all parameters have default values, an important feature is that all parameters for PD5 can be set by the user. The default values are based on our ongoing work with <italic>S. cerevisiae</italic> and these defaults may not necessarily apply to other organisms. We aim to refine and improve default values and methods from subsequent studies of dimerisation, annealing temperature and secondary binding.</p>
<p>The use of PD5 has already proved to be effective in various challenging primer design applications as exemplified above. Nevertheless, we view the PD5 project as a dynamic environment for the development of primer design software. Therefore, we strongly encourage the bioinformatics community to contribute to PD5: to add to the current collection of modules and to enhance the existing modules. In this way, bioinformaticians will be able to build a repository of knowledge of primer design for reuse by others, in the form of code that has been used in practice in many diverse projects.</p>
<p>The PD5 software library is downloadable from the <italic>primer-design</italic> project pages on Google Code and the accompanying Wiki includes instructions and examples: <ext-link ext-link-type="uri" xlink:href="http://code.google.com/p/primer-design" xlink:type="simple">http://code.google.com/p/primer-design</ext-link></p>
</sec><sec id="s4" sec-type="methods">
<title>Methods</title>
<p>One of the primary objectives of the PD5 project is to produce reusable software modules that provide all the necessary tools for the development of fast and efficient primer design applications. These tools encompass the detection of potential dimerisation, the calculation of annealing temperatures, the detection of potential secondary binding and secondary products, and the optimisation of selected potential primers.</p>
<sec id="s4a">
<title>The PD5 software library</title>
<p>The overall modular class structure of PD5 is shown in <xref ref-type="fig" rid="pone-0080156-g001">Figure 1</xref> where the main classes are on the left, the data classes are in the centre and the analysis classes are on the right. The main classes, <italic>primer</italic> and <italic>primer_pair</italic>, deal with the primer locations, primer candidate generation and primer candidate optimisation for individual primers or for pairs of primers. We expect most users to start with one of these two classes. After setting the various member variables to suit their needs they will call a function to generate candidates, followed by functions to calculate further properties of these candidates and then functions to sort and select the most optimal candidates.</p>
<fig id="pone-0080156-g001" position="float"><object-id pub-id-type="doi">10.1371/journal.pone.0080156.g001</object-id><label>Figure 1</label><caption>
<title>PD5 class structure.</title>
<p>The main classes are on the left, the data containment classes in the centre and the analysis classes on the right and below. Within each class only the main public methods and attributes (indicated by + prefix) are shown.</p>
</caption><graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pone.0080156.g001" position="float" xlink:type="simple"/></fig>
<p>The attributes in the data classes are those required for selection and optimisation of candidate primers. The data classes also contain methods for procuring the data from the relevant analysis class methods. The analysis classes are concerned with evaluating the potential for dimerisation, the numbers of binding sites and products, and the annealing temperatures for all candidate primers.</p>
<p>PD5 is designed such that specific classes can be accessed for specific lower level use. For example, the dimerisation class can be used in isolation to check if a particular primer pair might form a pair dimer, or a single instance of <italic>primer_data</italic> class can be used to test annealing temperature, self dimerisation, and hairpin formation for a given single primer. However, the ideal approach for the use of PD5 is that, from a single instance of the <italic>primer_pair</italic> class, the user has all methods available for efficiently designing primers. An example of this is given in <xref ref-type="fig" rid="pone-0080156-g002">Figure 2</xref> showing how simple primer design can be achieved with little more than a handful of function/method calls. An example of more sophisticated primer design is given in <xref ref-type="fig" rid="pone-0080156-g003">Figure 3</xref> showing more detailed design of an individual primer.</p>
<fig id="pone-0080156-g002" position="float"><object-id pub-id-type="doi">10.1371/journal.pone.0080156.g002</object-id><label>Figure 2</label><caption>
<title>Example code for basic primer analysis using the <italic>primer_pair</italic> class.</title>
</caption><graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pone.0080156.g002" position="float" xlink:type="simple"/></fig><fig id="pone-0080156-g003" position="float"><object-id pub-id-type="doi">10.1371/journal.pone.0080156.g003</object-id><label>Figure 3</label><caption>
<title>Example code for PD5_ssr, demonstrating some of the selection criteria for the forward primer.</title>
</caption><graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pone.0080156.g003" position="float" xlink:type="simple"/></fig></sec><sec id="s4b">
<title>Hairpin formation and dimerisation</title>
<p>Potential dimerisation and hairpin formation are detected using rule based binding affinity methods very similar to those used by Primer3. However, this rule based method is applied to a sequence of a user definable length at the 3′ end of each primer and it is this modification that permits the detection of dimerisation in a much broader range of primer lengths than existing applications. The dimerisation and hairpin methods check the final <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0080156.e003" xlink:type="simple"/></inline-formula> bases at the 3′ tail for complementarity, and give a higher weighting to G and C complements, scoring up to a maximum <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0080156.e004" xlink:type="simple"/></inline-formula>. Parameters such as <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0080156.e005" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0080156.e006" xlink:type="simple"/></inline-formula> and the weightings of the different bases can be altered to suit the user's needs.</p>
<p>Future plans for the PD5 project include research and development of thermodynamic methods for hairpin and dimerisation detection, the results of which are to be included in a future software release.</p>
</sec><sec id="s4c">
<title>Annealing temperatures</title>
<p>The popular annealing temperature algorithms using thermodynamic data <xref ref-type="bibr" rid="pone.0080156-SantaLucia1">[19]</xref>, <xref ref-type="bibr" rid="pone.0080156-Breslauer1">[20]</xref> available in Primer3′s <italic>oligoTm</italic> code are included in the PD5 software library, and these have been shown to work well empirically for primers up to 32 bases in length. The annealing temperature class also includes several methods for calculating annealing temperatures using equations devised by Freier <xref ref-type="bibr" rid="pone.0080156-Freier1">[21]</xref> and Wallace <xref ref-type="bibr" rid="pone.0080156-Wallace1">[22]</xref>, which can calculate close approximations for longer primers. For the present, the default temperature calculation method used in the primer class is Primer3′s <italic>oligoTm</italic> method.</p>
<p>We aim to increase the range of annealing temperature algorithms available to PD5 in the near future. As an open source project, one of our objectives is to promote the inclusion of good code from other open source projects as reusable modules that increase collective knowledge and understanding of the most important factors that constrain the primer design process. One area of concern is that ideally, primers should have a more or less constant GC content throughout their length, but in instances where this is not possible the presence of many GC residues at the 3′ end can lead to mis-priming. <xref ref-type="sec" rid="s4">Methods</xref> to determine the GC distribution along the length of primers would be beneficial particularly for use with longer primers. We provide an abstract base class for annealing temperature, and 4 derived classes that demonstrate how different temperature calculation algorithms can be incorporated into PD5. The end user can choose their preferred temperature method, but can easily change this for another method later, since all annealing temperature subclasses must implement the same core functionality. New temperature calculation methods can be added as further classes without disrupting existing code.</p>
</sec><sec id="s4d">
<title>Secondary binding and products</title>
<p>PD5 presently has four methods for secondary binding detection. Three methods use third party software: BLAST <xref ref-type="bibr" rid="pone.0080156-Zhang1">[23]</xref>, FASTA <xref ref-type="bibr" rid="pone.0080156-Pearson1">[24]</xref> and SSEARCH <xref ref-type="bibr" rid="pone.0080156-Pearson2">[25]</xref>. However, due to their heuristic nature, these methods will occasionally fail to detect significant alignments that can result in mis-priming and the corresponding production of alternative PCR products. This is because these applications are sequence alignment algorithms and work on the probability that a given sequence has significant sequence similarity to a matching sequence on the template. Potential primer binding sites are likely to have extremely varied probabilities of homology and sequence alignment algorithms could overlook primer binding sequences with a high probability of occurrence on the template. This is particularly a problem with small sequence stretches that have evenly spaced mismatches <xref ref-type="bibr" rid="pone.0080156-Gordon1">[11]</xref>. Furthermore, sequence alignment algorithms are computationally expensive compared with string matching algorithms and are largely unnecessary for the detection of secondary binding. Therefore, we developed a string matching algorithm optimised for the detection of primer binding on DNA sequences, which is included in the <italic>dna_find</italic> class. When tested on the <italic>S. cerevisiae</italic> genome and a plasmid sequence containing the URA3 gene from <italic>Kluyveromyces lactis</italic>, sequence alignment algorithms failed to detect 2% of the primer binding locations on the plasmid sequence, which were correctly detected by the sequence matching algorithm used in the secondary binding detection method in the <italic>dna_find</italic> class.</p>
<p>Secondary primer binding becomes a serious problem if it causes the exponential amplification of an alternative product. PD5 provides a method for PCR product detection. It uses the <italic>dna_find</italic> class to find all binding sites and then checks downstream from the location of each forward binding site for a reverse binding site within a user defined region on the template. The length of the user defined region depends essentially on the PCR extension time (approx. 1000 bases per min). The default length in PD5′s <italic>search_for_pcr_products</italic> method in the <italic>dna_find</italic> class is 3500 bases. This method detects all potential products. One of those products will, of course, be the target region, so it is the occurrence of more than one product that gives an indication of potential secondary product formation. A pseudocode algorithm outlining the basic operation of the product detection method is included in the <xref ref-type="supplementary-material" rid="pone.0080156.s001">Information S1</xref>(Section S2, Algorithm S1) along with the code and results of a demonstration application to find products in <italic>S. cerevisiae</italic> (<xref ref-type="supplementary-material" rid="pone.0080156.s001">Information S1</xref>, Section S2, Tables S4 and Figures S3 and S4).</p>
<p>To encourage further secondary binding methods to be added to PD5 we have implemented an abstract base class <italic>nsb</italic>, from which specific implementation classes can be derived, and <italic>dna_find</italic> provides one such example of this.</p>
</sec><sec id="s4e">
<title>Multi-objective optimisation for primers</title>
<p>Multi-objective optimisation problems require an optimal solution to a problem that has characteristics that lie in several independent dimensions. For primer design, we prefer primers that are optimised for some or all of the previously described characteristics, such as suitable sizes and locations, no secondary binding and suitable annealing conditions. As is often the case, a solution that is optimal in all dimensions may not exist and in such cases, a Pareto optimal solution is chosen that takes into account a user specified weighting or priority on the dimensions deemed to be most important.</p>
<p>A multi-objective optimisation algorithm is included as a selectable option in the <italic>sort_candidates</italic> method in the <italic>primer</italic> class. The objective function is given by:<disp-formula id="pone.0080156.e007"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pone.0080156.e007" xlink:type="simple"/><label>(1)</label></disp-formula>where <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0080156.e008" xlink:type="simple"/></inline-formula> is the user specified weighting and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0080156.e009" xlink:type="simple"/></inline-formula> is a non-linear component applied to the value of the characteristic <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0080156.e010" xlink:type="simple"/></inline-formula>. The non-linear component we use is the sigmoid function given by:<disp-formula id="pone.0080156.e011"><graphic position="anchor" xlink:href="info:doi/10.1371/journal.pone.0080156.e011" xlink:type="simple"/><label>(2)</label></disp-formula>where <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0080156.e012" xlink:type="simple"/></inline-formula> is a gain term used to adjust non-linearity of the sigmoid (default value 1.0), and <inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0080156.e013" xlink:type="simple"/></inline-formula> is an offset used to push all characteristic scores into the non-linear region of the sigmoid that provides the best discrimination (<inline-formula><inline-graphic xlink:href="info:doi/10.1371/journal.pone.0080156.e014" xlink:type="simple"/></inline-formula>). A brief example of non-linear multi-objective optimisation in included in the <xref ref-type="supplementary-material" rid="pone.0080156.s001">Information S1</xref> (Section S3).</p>
</sec><sec id="s4f">
<title>Determination of optimum primers</title>
<p>The determination of optimum primers is based on a stable iterative list sorting method where items at the bottom of the list can be rejected. A threshold value can be set so that all items in the list with characteristic values outside of the threshold can be eliminated from the list before re-sorting. This is particularly useful with rule based dimerisation scoring methods, where a score above a defined threshold indicates potential dimerisation. Primers in the sorting list with scores above the threshold are sorted to the bottom of the list and then rejected leaving a subset that contains only items with dimerisation scores below the threshold for subsequent sorting.</p>
<p>We currently use a prioritised sorting method where the priority for sorting according to each characteristic can be varied. This allows the sorting criteria to be changed, and therefore the order of the results, in accordance with the user's requirements. If, for example, the best forward primer we find has more than one binding site on the template, then there is the possibility of secondary product formation if the reverse primer has more than one binding site also. In such a circumstance we can increase the priority of the secondary binding score for the reverse primer so that those potential primers having just one template binding site are placed at the top of the list. In this way primer pairs less likely to make secondary products will be placed at the top of the list. Users who wish to use BLAST, FASTA or SSEARCH for the detection of potential secondary binding sites on the template will find this sorting approach useful to determine primer pairs that potentially form secondary products.</p>
<p>The multi-objective optimisation procedure described above is included in the options for candidate sorting and is best used as the last step in the sorting procedure. This allows for a more precise selection of the remaining candidate primers at the top of the lists previously sorted by the other options.</p>
<p>An application named <italic>basic_app</italic> is included in the PD5 download package that demonstrates the sorting procedure showing a list of primer candidates found, a list of primer candidates after sorting and the final list of candidate primer pairs.</p>
</sec><sec id="s4g">
<title>Comparison with Primer3</title>
<p>Primer3 has far more options than PD5, with over 150 parameters, and a full evaluation/comparison of each of these is beyond the scope of this paper. Primer3 has been extensively used for over 13 years now, and has had many additions during this period. It has a large user base, from occasional non-experts using the web interface, to expert users who need specialist options. In this respect it easily provides a wide range of functionality that PD5 does not provide, including for example, allowing the user to specify that primers must span exon-exon junctions. The two systems share many common features, including methods for calculating annealing temperature, assessing dimer potential, and allowing the user to specify useful constraints such as the required GC composition. They also both provide a web interface, though PD5′s web interface currently has far fewer options. One of the main advantages that PD5 provides but Primer3 does not is an integrated non-specific binding search against a genome sequence. This search (dna_find) does not rely on external services such as BLAST, but is implemented natively, and it is not a heuristic search, so is guaranteed to find all alternative potential binding sites meeting the parameters the user has chosen. The other main focus of PD5 has been on the ability to design and test the properties of long primers, which are increasingly required by the synthetic biology community. This has involved the implementation of dimerisation and annealing temperature methods that are more suited to applications requiring long primers.</p>
</sec></sec><sec id="s5">
<title>Supporting Information</title>
<supplementary-material id="pone.0080156.s001" mimetype="application/zip" xlink:href="info:doi/10.1371/journal.pone.0080156.s001" position="float" xlink:type="simple"><label>Information S1</label><caption>
<p><bold>Further information on the biology methods used for validating primers (including example gels), algorithms and test results from the DNAfind class, and further information on the multi-objective optimisation method used in optimum primer selection.</bold></p>
<p>(ZIP)</p>
</caption></supplementary-material></sec></body>
<back><ref-list>
<title>References</title>
<ref id="pone.0080156-Rozen1"><label>1</label>
<mixed-citation publication-type="other" xlink:type="simple">Rozen S, Skaletsky HJ (2000) Primer3 on the WWW for general users and for biologist programmers. In: Misener S, Krawetz SA, editors, Bioinformatics Methods and Protocols: Methods in Molecular Biology. Humana Press, Totowa, NJ, pp. 365–386.</mixed-citation>
</ref>
<ref id="pone.0080156-Untergasser1"><label>2</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Untergasser</surname><given-names>A</given-names></name>, <name name-style="western"><surname>Cutcutache</surname><given-names>I</given-names></name>, <name name-style="western"><surname>Koressaar</surname><given-names>T</given-names></name>, <name name-style="western"><surname>Ye</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Faircloth</surname><given-names>BC</given-names></name>, <etal>et al</etal>. (<year>2012</year>) <article-title>Primer3 – new capabilities and interfaces</article-title>. <source>Nucleic Acids Research</source> <volume>40</volume><supplement>(15)</supplement>: <fpage>e115</fpage>.</mixed-citation>
</ref>
<ref id="pone.0080156-Piriyapongsa1"><label>3</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Piriyapongsa</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Ngamphiw</surname><given-names>C</given-names></name>, <name name-style="western"><surname>Assawamakin</surname><given-names>A</given-names></name>, <name name-style="western"><surname>Wangkumhang</surname><given-names>P</given-names></name>, <name name-style="western"><surname>Suwannasri</surname><given-names>P</given-names></name>, <etal>et al</etal>. (<year>2009</year>) <article-title>Rexprimer: an integrated primer designing tool increases PCR effectiveness by avoiding 3′ SNPin-primer and mis-priming from structural variation</article-title>. <source>BMC Genomics</source> <volume>10</volume><supplement>(Suppl 3)</supplement>: <fpage>S4</fpage>.</mixed-citation>
</ref>
<ref id="pone.0080156-Arvidsson1"><label>4</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Arvidsson</surname><given-names>S</given-names></name>, <name name-style="western"><surname>Kwasniewski</surname><given-names>M</given-names></name>, <name name-style="western"><surname>Riaño-Pachon</surname><given-names>D</given-names></name>, <name name-style="western"><surname>Mueller-Roeber</surname><given-names>B</given-names></name> (<year>2008</year>) <article-title>QuantPrime: a flexible tool for reliable high-throughput primer design for quantitative PCR</article-title>. <source>BMC Bioinformatics</source> <volume>9</volume>: <fpage>465</fpage>.</mixed-citation>
</ref>
<ref id="pone.0080156-Li1"><label>5</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Li</surname><given-names>K</given-names></name>, <name name-style="western"><surname>Brownley</surname><given-names>A</given-names></name>, <name name-style="western"><surname>Stockwell</surname><given-names>TB</given-names></name>, <name name-style="western"><surname>Beeson</surname><given-names>K</given-names></name>, <name name-style="western"><surname>McIntosh</surname><given-names>TC</given-names></name>, <etal>et al</etal>. (<year>2008</year>) <article-title>Novel computational methods for increasing PCR primer design effectiveness in directed sequencing</article-title>. <source>BMC Bioinformatics</source> <volume>9</volume>: <fpage>191</fpage>.</mixed-citation>
</ref>
<ref id="pone.0080156-Boutros1"><label>6</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Boutros</surname><given-names>R</given-names></name>, <name name-style="western"><surname>Stokes</surname><given-names>N</given-names></name>, <name name-style="western"><surname>Bekaert</surname><given-names>M</given-names></name>, <name name-style="western"><surname>Teeling</surname><given-names>EC</given-names></name> (<year>2009</year>) <article-title>UniPrime2: a web service providing easier universal primer design</article-title>. <source>Nucleic Acids Research</source> <volume>37</volume><supplement>(Web Server issue)</supplement>: <fpage>W209</fpage>–<lpage>W213</lpage>.</mixed-citation>
</ref>
<ref id="pone.0080156-You1"><label>7</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>You</surname><given-names>FM</given-names></name>, <name name-style="western"><surname>Huo</surname><given-names>N</given-names></name>, <name name-style="western"><surname>Gu</surname><given-names>YQ</given-names></name>, <name name-style="western"><surname>Luo</surname><given-names>M</given-names></name>, <name name-style="western"><surname>Ma</surname><given-names>Y</given-names></name>, <etal>et al</etal>. (<year>2008</year>) <article-title>BatchPrimer3: A high throughput web application for PCR and sequencing primer design</article-title>. <source>BMC Bioinformatics</source> <volume>9</volume>: <fpage>253</fpage>.</mixed-citation>
</ref>
<ref id="pone.0080156-Tsai1"><label>8</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Tsai</surname><given-names>MF</given-names></name>, <name name-style="western"><surname>Lin</surname><given-names>YJ</given-names></name>, <name name-style="western"><surname>Cheng</surname><given-names>YC</given-names></name>, <name name-style="western"><surname>Lee</surname><given-names>KH</given-names></name>, <name name-style="western"><surname>Huang</surname><given-names>CC</given-names></name>, <etal>et al</etal>. (<year>2007</year>) <article-title>PrimerZ: streamlined primer design for promoters, exons and human SNPs</article-title>. <source>Nucleic Acids Research</source> <volume>35</volume><supplement>(Web Server issue)</supplement>: <fpage>W63</fpage>–<lpage>W65</lpage>.</mixed-citation>
</ref>
<ref id="pone.0080156-You2"><label>9</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>You</surname><given-names>FM</given-names></name>, <name name-style="western"><surname>Huo</surname><given-names>N</given-names></name>, <name name-style="western"><surname>Gu</surname><given-names>YQ</given-names></name>, <name name-style="western"><surname>Lazo</surname><given-names>GR</given-names></name>, <name name-style="western"><surname>Dvorak</surname><given-names>J</given-names></name>, <etal>et al</etal>. (<year>2009</year>) <article-title>ConservedPrimers 2.0: A highthroughput pipeline for comparative genome referenced intron-flanking PCR primer design and its application in wheat SNP discovery</article-title>. <source>BMC Bioinformatics</source> <volume>10</volume>: <fpage>331</fpage>.</mixed-citation>
</ref>
<ref id="pone.0080156-Shen1"><label>10</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Shen</surname><given-names>Z</given-names></name>, <name name-style="western"><surname>Qu</surname><given-names>W</given-names></name>, <name name-style="western"><surname>Wang</surname><given-names>W</given-names></name>, <name name-style="western"><surname>Lu</surname><given-names>Y</given-names></name>, <name name-style="western"><surname>Wu</surname><given-names>Y</given-names></name>, <etal>et al</etal>. (<year>2010</year>) <article-title>MPprimer: a program for reliable multiplex PCR primer design</article-title>. <source>BMC Bioinformatics</source> <volume>11</volume>: <fpage>143</fpage>.</mixed-citation>
</ref>
<ref id="pone.0080156-Gordon1"><label>11</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Gordon</surname><given-names>PMK</given-names></name>, <name name-style="western"><surname>Sensen</surname><given-names>CW</given-names></name> (<year>2004</year>) <article-title>Osprey: a comprehensive tool employing novel methods for the design of oligonucleotides for DNA sequencing and microarrays</article-title>. <source>Nucleic Acids Research</source> <volume>32</volume><supplement>(17)</supplement>: <fpage>e133</fpage>.</mixed-citation>
</ref>
<ref id="pone.0080156-Fredslund1"><label>12</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Fredslund</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Lange</surname><given-names>M</given-names></name> (<year>2007</year>) <article-title>Primique: automatic design of specific PCR primers for each sequence in a family</article-title>. <source>BMC Bioinformatics</source> <volume>8</volume>: <fpage>369</fpage>.</mixed-citation>
</ref>
<ref id="pone.0080156-Akada1"><label>13</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Akada</surname><given-names>R</given-names></name>, <name name-style="western"><surname>Kitagawa</surname><given-names>T</given-names></name>, <name name-style="western"><surname>Kaneko</surname><given-names>S</given-names></name>, <name name-style="western"><surname>Toyonaga</surname><given-names>D</given-names></name>, <name name-style="western"><surname>Ito</surname><given-names>S</given-names></name>, <etal>et al</etal>. (<year>2006</year>) <article-title>PCR-mediated seamless gene deletion and marker recycling in Saccharomyces cerevisiae</article-title>. <source>Yeast</source> <volume>23</volume><supplement>(5)</supplement>: <fpage>399</fpage>–<lpage>405</lpage>.</mixed-citation>
</ref>
<ref id="pone.0080156-Blankenberg1"><label>14</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Blankenberg</surname><given-names>D</given-names></name>, <name name-style="western"><surname>Von Kuster</surname><given-names>G</given-names></name>, <name name-style="western"><surname>Coraor</surname><given-names>N</given-names></name>, <name name-style="western"><surname>Ananda</surname><given-names>G</given-names></name>, <name name-style="western"><surname>Lazarus</surname><given-names>R</given-names></name>, <etal>et al</etal>. (<year>2010</year>) <article-title>Galaxy: a web-based genome analysis tool for experimentalists</article-title>. <source>Current Protocols in Molecular Biology</source> <volume>19</volume><supplement>(10)</supplement>: <fpage>1</fpage>–<lpage>21</lpage>.</mixed-citation>
</ref>
<ref id="pone.0080156-Goecks1"><label>15</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Goecks</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Nekrutenko</surname><given-names>A</given-names></name>, <name name-style="western"><surname>Taylor</surname><given-names>J</given-names></name> (<year>2010</year>) <collab xlink:type="simple">The Galaxy Team</collab> (<year>2010</year>) <article-title>Galaxy: a comprehensive approach for supporting accessible, reproducible, and transparent computational research in the life sciences</article-title>. <source>Genome Biol</source> <volume>11</volume><supplement>(8)</supplement>: <fpage>R86</fpage>.</mixed-citation>
</ref>
<ref id="pone.0080156-Giardine1"><label>16</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Giardine</surname><given-names>B</given-names></name>, <name name-style="western"><surname>Riemer</surname><given-names>C</given-names></name>, <name name-style="western"><surname>Hardison</surname><given-names>RC</given-names></name>, <name name-style="western"><surname>Burhans</surname><given-names>R</given-names></name>, <name name-style="western"><surname>Elnitski</surname><given-names>L</given-names></name>, <etal>et al</etal>. (<year>2005</year>) <article-title>Galaxy: a platform for interactive large-scale genome analysis</article-title>. <source>Genome Research</source> <volume>15</volume><supplement>(10)</supplement>: <fpage>1451</fpage>–<lpage>5</lpage>.</mixed-citation>
</ref>
<ref id="pone.0080156-Tannenbaum1"><label>17</label>
<mixed-citation publication-type="book" xlink:type="simple">Tannenbaum T, Wright D, Miller K, Livny M (2001) Condor – a distributed job scheduler. In: Sterling T, editor, Beowulf Cluster Computing with Linux, MIT Press.</mixed-citation>
</ref>
<ref id="pone.0080156-Thiel1"><label>18</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Thiel</surname><given-names>T</given-names></name>, <name name-style="western"><surname>Michalek</surname><given-names>W</given-names></name>, <name name-style="western"><surname>Varshney</surname><given-names>RK</given-names></name>, <name name-style="western"><surname>Graner</surname><given-names>A</given-names></name> (<year>2003</year>) <article-title>Exploiting EST databases for the development and characterization of gene-derived SSR-markers in barley (hordeum vulgare l.)</article-title>. <source>Theor Appl Genet</source> <volume>106</volume><supplement>(3)</supplement>: <fpage>411</fpage>–<lpage>22</lpage>.</mixed-citation>
</ref>
<ref id="pone.0080156-SantaLucia1"><label>19</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>SantaLucia</surname><given-names>J</given-names><suffix>Jr</suffix></name>, <name name-style="western"><surname>Allawi</surname><given-names>HT</given-names></name>, <name name-style="western"><surname>Seneviratne</surname><given-names>PA</given-names></name> (<year>1996</year>) <article-title>Improved nearest-neighbor parameters for predicting DNA duplex stability</article-title>. <source>Biochemistry</source> <volume>35</volume><supplement>(11)</supplement>: <fpage>3555</fpage>–<lpage>3562</lpage>.</mixed-citation>
</ref>
<ref id="pone.0080156-Breslauer1"><label>20</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Breslauer</surname><given-names>KJ</given-names></name>, <name name-style="western"><surname>Frank</surname><given-names>R</given-names></name>, <name name-style="western"><surname>Blöcker</surname><given-names>H</given-names></name>, <name name-style="western"><surname>Marky</surname><given-names>LA</given-names></name> (<year>1986</year>) <article-title>Predicting DNA duplex stability from the base sequence</article-title>. <source>PNAS</source> <volume>83</volume><supplement>(11)</supplement>: <fpage>3746</fpage>–<lpage>3750</lpage>.</mixed-citation>
</ref>
<ref id="pone.0080156-Freier1"><label>21</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Freier</surname><given-names>SM</given-names></name>, <name name-style="western"><surname>Kierzek</surname><given-names>R</given-names></name>, <name name-style="western"><surname>Jaeger</surname><given-names>JA</given-names></name>, <name name-style="western"><surname>Sugimoto</surname><given-names>N</given-names></name>, <name name-style="western"><surname>Caruthers</surname><given-names>MH</given-names></name>, <etal>et al</etal>. (<year>1986</year>) <article-title>Improved free-energy parameters for predictions of RNA duplex stability</article-title>. <source>Proc Natl Acad Sci</source> <volume>83</volume>: <fpage>9373</fpage>–<lpage>9377</lpage>.</mixed-citation>
</ref>
<ref id="pone.0080156-Wallace1"><label>22</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Wallace</surname><given-names>RB</given-names></name>, <name name-style="western"><surname>Shaffer</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Murphy</surname><given-names>RF</given-names></name>, <name name-style="western"><surname>Bonner</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Hirose</surname><given-names>T</given-names></name>, <etal>et al</etal>. (<year>1979</year>) <article-title>Hybridization of synthetic oligodeoxyribonucteotides to phi-X174 DNA: the effect of single base pair mismatch</article-title>. <source>Nucleic Acids Research</source> <volume>6</volume><supplement>(11)</supplement>: <fpage>3543</fpage>–<lpage>3557</lpage>.</mixed-citation>
</ref>
<ref id="pone.0080156-Zhang1"><label>23</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Zhang</surname><given-names>Z</given-names></name>, <name name-style="western"><surname>Schwartz</surname><given-names>S</given-names></name>, <name name-style="western"><surname>Wagner</surname><given-names>L</given-names></name>, <name name-style="western"><surname>Miller</surname><given-names>W</given-names></name> (<year>2000</year>) <article-title>A greedy algorithm for aligning DNA sequences</article-title>. <source>Journal of Computational Biology</source> <volume>7</volume><supplement>(1–2)</supplement>: <fpage>203</fpage>–<lpage>14</lpage>.</mixed-citation>
</ref>
<ref id="pone.0080156-Pearson1"><label>24</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Pearson</surname><given-names>WR</given-names></name> (<year>2000</year>) <article-title>Flexible sequence similarity searching with the FASTA3 program package</article-title>. <source>Methods Mol Biol</source> <volume>132</volume>: <fpage>185</fpage>–<lpage>219</lpage>.</mixed-citation>
</ref>
<ref id="pone.0080156-Pearson2"><label>25</label>
<mixed-citation publication-type="journal" xlink:type="simple"><name name-style="western"><surname>Pearson</surname><given-names>WR</given-names></name>, <name name-style="western"><surname>Lipman</surname><given-names>DJ</given-names></name> (<year>1988</year>) <article-title>Improved tools for biological sequence comparison</article-title>. <source>Proc Natl Acad Sci</source> <volume>85</volume><supplement>(8)</supplement>: <fpage>2444</fpage>–<lpage>8</lpage>.</mixed-citation>
</ref>
</ref-list></back>
</article>